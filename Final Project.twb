<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='clean+ (final)' inline='true' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='final' name='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ahmed/OneDrive/Desktop/Final Project/final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Category' table='[Category$]' type='table'>
          <columns gridOrigin='A1:C7:no:A1:C7:0' header='yes' outcome='6'>
            <column datatype='string' name='Sub Category' ordinal='0' />
            <column datatype='integer' name='Sub Category ID' ordinal='1' />
            <column datatype='string' name='Category' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='clean' table='[clean$]' type='table'>
            <columns gridOrigin='A1:J5952:no:A1:J5952:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='Sub Category ID' ordinal='1' />
              <column datatype='integer' name='Plant ID' ordinal='2' />
              <column datatype='integer' name='Vendor ID' ordinal='3' />
              <column datatype='integer' name='Material ID' ordinal='4' />
              <column datatype='integer' name='Defect Type ID' ordinal='5' />
              <column datatype='integer' name='Material Type ID' ordinal='6' />
              <column datatype='integer' name='Defect ID' ordinal='7' />
              <column datatype='integer' name='Defect Qty' ordinal='8' />
              <column datatype='integer' name='Downtime min' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Category' table='[Category$]' type='table'>
            <columns gridOrigin='A1:C7:no:A1:C7:0' header='yes' outcome='6'>
              <column datatype='string' name='Sub Category' ordinal='0' />
              <column datatype='integer' name='Sub Category ID' ordinal='1' />
              <column datatype='string' name='Category' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Defects Type' table='[&apos;Defects Type$&apos;]' type='table'>
            <columns gridOrigin='A1:C4:no:A1:C4:0' header='yes' outcome='6'>
              <column datatype='string' name='Defect Type' ordinal='0' />
              <column datatype='integer' name='Defect Type ID' ordinal='1' />
              <column datatype='integer' name='Sort' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Defects' table='[Defects$]' type='table'>
            <columns gridOrigin='A1:B306:no:A1:B306:0' header='yes' outcome='6'>
              <column datatype='string' name='Defect' ordinal='0' />
              <column datatype='integer' name='Defect ID' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Material' table='[Material$]' type='table'>
            <columns gridOrigin='A1:B23:no:A1:B23:0' header='yes' outcome='6'>
              <column datatype='string' name='Material Type' ordinal='0' />
              <column datatype='integer' name='Material Type ID' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Plant' table='[Plant$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='6'>
              <column datatype='string' name='Plant' ordinal='0' />
              <column datatype='integer' name='Plant ID' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Vendor' table='[Vendor$]' type='table'>
            <columns gridOrigin='A1:B329:no:A1:B329:0' header='yes' outcome='6'>
              <column datatype='string' name='Vendor' ordinal='0' />
              <column datatype='integer' name='Vendor ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Category].[Category]' />
          <map key='[Date]' value='[clean].[Date]' />
          <map key='[Defect ID (Defects)]' value='[Defects].[Defect ID]' />
          <map key='[Defect ID]' value='[clean].[Defect ID]' />
          <map key='[Defect Qty]' value='[clean].[Defect Qty]' />
          <map key='[Defect Type ID (Defects Type)]' value='[Defects Type].[Defect Type ID]' />
          <map key='[Defect Type ID]' value='[clean].[Defect Type ID]' />
          <map key='[Defect Type]' value='[Defects Type].[Defect Type]' />
          <map key='[Defect]' value='[Defects].[Defect]' />
          <map key='[Downtime min]' value='[clean].[Downtime min]' />
          <map key='[Material ID]' value='[clean].[Material ID]' />
          <map key='[Material Type ID (Material)]' value='[Material].[Material Type ID]' />
          <map key='[Material Type ID]' value='[clean].[Material Type ID]' />
          <map key='[Material Type]' value='[Material].[Material Type]' />
          <map key='[Plant ID (Plant)]' value='[Plant].[Plant ID]' />
          <map key='[Plant ID]' value='[clean].[Plant ID]' />
          <map key='[Plant]' value='[Plant].[Plant]' />
          <map key='[Sort]' value='[Defects Type].[Sort]' />
          <map key='[Sub Category ID (Category)]' value='[Category].[Sub Category ID]' />
          <map key='[Sub Category ID]' value='[clean].[Sub Category ID]' />
          <map key='[Sub Category]' value='[Category].[Sub Category]' />
          <map key='[Vendor ID (Vendor)]' value='[Vendor].[Vendor ID]' />
          <map key='[Vendor ID]' value='[clean].[Vendor ID]' />
          <map key='[Vendor]' value='[Vendor].[Vendor]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clean]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J5952:no:A1:J5952:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Category]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C7:no:A1:C7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Defects Type]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C4:no:A1:C4:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Defects]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B306:no:A1:B306:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Material]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B23:no:A1:B23:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Plant]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Vendor]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B329:no:A1:B329:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[clean]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub Category ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sub Category ID]</local-name>
            <parent-name>[clean]</parent-name>
            <remote-alias>Sub Category ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plant ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Plant ID]</local-name>
            <parent-name>[clean]</parent-name>
            <remote-alias>Plant ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vendor ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vendor ID]</local-name>
            <parent-name>[clean]</parent-name>
            <remote-alias>Vendor ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Material ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Material ID]</local-name>
            <parent-name>[clean]</parent-name>
            <remote-alias>Material ID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defect Type ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Defect Type ID]</local-name>
            <parent-name>[clean]</parent-name>
            <remote-alias>Defect Type ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Material Type ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Material Type ID]</local-name>
            <parent-name>[clean]</parent-name>
            <remote-alias>Material Type ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defect ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Defect ID]</local-name>
            <parent-name>[clean]</parent-name>
            <remote-alias>Defect ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defect Qty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Defect Qty]</local-name>
            <parent-name>[clean]</parent-name>
            <remote-alias>Defect Qty</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Downtime min</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Downtime min]</local-name>
            <parent-name>[clean]</parent-name>
            <remote-alias>Downtime min</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub Category]</local-name>
            <parent-name>[Category]</parent-name>
            <remote-alias>Sub Category</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Category_0D0C9ECBCAF244D496A185A46517DCA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub Category ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sub Category ID (Category)]</local-name>
            <parent-name>[Category]</parent-name>
            <remote-alias>Sub Category ID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Category_0D0C9ECBCAF244D496A185A46517DCA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Category]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Category_0D0C9ECBCAF244D496A185A46517DCA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defect Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Defect Type]</local-name>
            <parent-name>[Defects Type]</parent-name>
            <remote-alias>Defect Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defect Type ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Defect Type ID (Defects Type)]</local-name>
            <parent-name>[Defects Type]</parent-name>
            <remote-alias>Defect Type ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sort</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sort]</local-name>
            <parent-name>[Defects Type]</parent-name>
            <remote-alias>Sort</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defect</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Defect]</local-name>
            <parent-name>[Defects]</parent-name>
            <remote-alias>Defect</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Defects_27937EA9085C48D79DACBA6740F0112B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defect ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Defect ID (Defects)]</local-name>
            <parent-name>[Defects]</parent-name>
            <remote-alias>Defect ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Defects_27937EA9085C48D79DACBA6740F0112B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Material Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Material Type]</local-name>
            <parent-name>[Material]</parent-name>
            <remote-alias>Material Type</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Material_C33DE6C297B249469A20A24C7F03ACC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Material Type ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Material Type ID (Material)]</local-name>
            <parent-name>[Material]</parent-name>
            <remote-alias>Material Type ID</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Material_C33DE6C297B249469A20A24C7F03ACC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Plant]</local-name>
            <parent-name>[Plant]</parent-name>
            <remote-alias>Plant</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Plant_08CE5B58621E46E7BB41FF269845F034]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plant ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Plant ID (Plant)]</local-name>
            <parent-name>[Plant]</parent-name>
            <remote-alias>Plant ID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Plant_08CE5B58621E46E7BB41FF269845F034]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vendor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Vendor]</local-name>
            <parent-name>[Vendor]</parent-name>
            <remote-alias>Vendor</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vendor_9FAA39299A8342B8BEA9B416A84B1F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vendor ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vendor ID (Vendor)]</local-name>
            <parent-name>[Vendor]</parent-name>
            <remote-alias>Vendor ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vendor_9FAA39299A8342B8BEA9B416A84B1F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Category (Category)' datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Defect ID (Defects)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Defect ID]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='Defect Qty (bin)' datatype='integer' name='[Defect Qty (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[Defect Qty]' peg='0' size='15156' />
      </column>
      <column datatype='integer' name='[Defect Qty]' role='measure' type='quantitative' />
      <column datatype='string' name='[Defect Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Defect]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Material ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Material Type]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Plant ID (Plant)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Plant ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Vendor ID (Vendor)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Vendor ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Vendor]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Category' datatype='table' name='[__tableau_internal_object_id__].[Category_0D0C9ECBCAF244D496A185A46517DCA9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Defects Type' datatype='table' name='[__tableau_internal_object_id__].[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Defects' datatype='table' name='[__tableau_internal_object_id__].[Defects_27937EA9085C48D79DACBA6740F0112B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Material' datatype='table' name='[__tableau_internal_object_id__].[Material_C33DE6C297B249469A20A24C7F03ACC0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Plant asd' datatype='table' name='[__tableau_internal_object_id__].[Plant_08CE5B58621E46E7BB41FF269845F034]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Vendor asd' datatype='table' name='[__tableau_internal_object_id__].[Vendor_9FAA39299A8342B8BEA9B416A84B1F29]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='clean' datatype='table' name='[__tableau_internal_object_id__].[clean_EABEC40FA4844A2EA82A40D4DF543E52]' role='measure' type='quantitative' />
      <column-instance column='[Defect Type]' derivation='None' name='[none:Defect Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Defect]' derivation='None' name='[none:Defect:nk]' pivot='key' type='nominal' />
      <column-instance column='[Material Type]' derivation='None' name='[none:Material Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Vendor]' derivation='None' name='[none:Vendor:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ahmed/AppData/Local/Temp/TableauTemp/#TableauTemp_12vlhnv0mcklcy1bbnf3m0r8bphz.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/10/2024 11:55:39 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Category_0D0C9ECBCAF244D496A185A46517DCA9' table='[Extract].[Category_0D0C9ECBCAF244D496A185A46517DCA9]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='clean_EABEC40FA4844A2EA82A40D4DF543E52' table='[Extract].[clean_EABEC40FA4844A2EA82A40D4DF543E52]' type='table' />
            <relation name='Category_0D0C9ECBCAF244D496A185A46517DCA9' table='[Extract].[Category_0D0C9ECBCAF244D496A185A46517DCA9]' type='table' />
            <relation name='Defects Type_5C3F67170C244D888B4BDEA85BA059E7' table='[Extract].[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]' type='table' />
            <relation name='Defects_27937EA9085C48D79DACBA6740F0112B' table='[Extract].[Defects_27937EA9085C48D79DACBA6740F0112B]' type='table' />
            <relation name='Material_C33DE6C297B249469A20A24C7F03ACC0' table='[Extract].[Material_C33DE6C297B249469A20A24C7F03ACC0]' type='table' />
            <relation name='Plant_08CE5B58621E46E7BB41FF269845F034' table='[Extract].[Plant_08CE5B58621E46E7BB41FF269845F034]' type='table' />
            <relation name='Vendor_9FAA39299A8342B8BEA9B416A84B1F29' table='[Extract].[Vendor_9FAA39299A8342B8BEA9B416A84B1F29]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Category]' value='[Category_0D0C9ECBCAF244D496A185A46517DCA9].[Category]' />
            <map key='[Date]' value='[clean_EABEC40FA4844A2EA82A40D4DF543E52].[Date]' />
            <map key='[Defect ID (Defects)]' value='[Defects_27937EA9085C48D79DACBA6740F0112B].[Defect ID]' />
            <map key='[Defect ID]' value='[clean_EABEC40FA4844A2EA82A40D4DF543E52].[Defect ID]' />
            <map key='[Defect Qty]' value='[clean_EABEC40FA4844A2EA82A40D4DF543E52].[Defect Qty]' />
            <map key='[Defect Type ID (Defects Type)]' value='[Defects Type_5C3F67170C244D888B4BDEA85BA059E7].[Defect Type ID]' />
            <map key='[Defect Type ID]' value='[clean_EABEC40FA4844A2EA82A40D4DF543E52].[Defect Type ID]' />
            <map key='[Defect Type]' value='[Defects Type_5C3F67170C244D888B4BDEA85BA059E7].[Defect Type]' />
            <map key='[Defect]' value='[Defects_27937EA9085C48D79DACBA6740F0112B].[Defect]' />
            <map key='[Downtime min]' value='[clean_EABEC40FA4844A2EA82A40D4DF543E52].[Downtime min]' />
            <map key='[Material ID]' value='[clean_EABEC40FA4844A2EA82A40D4DF543E52].[Material ID]' />
            <map key='[Material Type ID (Material)]' value='[Material_C33DE6C297B249469A20A24C7F03ACC0].[Material Type ID]' />
            <map key='[Material Type ID]' value='[clean_EABEC40FA4844A2EA82A40D4DF543E52].[Material Type ID]' />
            <map key='[Material Type]' value='[Material_C33DE6C297B249469A20A24C7F03ACC0].[Material Type]' />
            <map key='[Plant ID (Plant)]' value='[Plant_08CE5B58621E46E7BB41FF269845F034].[Plant ID]' />
            <map key='[Plant ID]' value='[clean_EABEC40FA4844A2EA82A40D4DF543E52].[Plant ID]' />
            <map key='[Plant]' value='[Plant_08CE5B58621E46E7BB41FF269845F034].[Plant]' />
            <map key='[Sort]' value='[Defects Type_5C3F67170C244D888B4BDEA85BA059E7].[Sort]' />
            <map key='[Sub Category ID (Category)]' value='[Category_0D0C9ECBCAF244D496A185A46517DCA9].[Sub Category ID]' />
            <map key='[Sub Category ID]' value='[clean_EABEC40FA4844A2EA82A40D4DF543E52].[Sub Category ID]' />
            <map key='[Sub Category]' value='[Category_0D0C9ECBCAF244D496A185A46517DCA9].[Sub Category]' />
            <map key='[Vendor ID (Vendor)]' value='[Vendor_9FAA39299A8342B8BEA9B416A84B1F29].[Vendor ID]' />
            <map key='[Vendor ID]' value='[clean_EABEC40FA4844A2EA82A40D4DF543E52].[Vendor ID]' />
            <map key='[Vendor]' value='[Vendor_9FAA39299A8342B8BEA9B416A84B1F29].[Vendor]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>clean</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>672</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub Category ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Sub Category ID]</local-name>
              <parent-name>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</parent-name>
              <remote-alias>Sub Category ID</remote-alias>
              <ordinal>1</ordinal>
              <family>clean</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plant ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Plant ID]</local-name>
              <parent-name>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</parent-name>
              <remote-alias>Plant ID</remote-alias>
              <ordinal>2</ordinal>
              <family>clean</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vendor ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Vendor ID]</local-name>
              <parent-name>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</parent-name>
              <remote-alias>Vendor ID</remote-alias>
              <ordinal>3</ordinal>
              <family>clean</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Material ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Material ID]</local-name>
              <parent-name>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</parent-name>
              <remote-alias>Material ID</remote-alias>
              <ordinal>4</ordinal>
              <family>clean</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1468</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Defect Type ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Defect Type ID]</local-name>
              <parent-name>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</parent-name>
              <remote-alias>Defect Type ID</remote-alias>
              <ordinal>5</ordinal>
              <family>clean</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Material Type ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Material Type ID]</local-name>
              <parent-name>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</parent-name>
              <remote-alias>Material Type ID</remote-alias>
              <ordinal>6</ordinal>
              <family>clean</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Defect ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Defect ID]</local-name>
              <parent-name>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</parent-name>
              <remote-alias>Defect ID</remote-alias>
              <ordinal>7</ordinal>
              <family>clean</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>276</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Defect Qty</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Defect Qty]</local-name>
              <parent-name>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</parent-name>
              <remote-alias>Defect Qty</remote-alias>
              <ordinal>8</ordinal>
              <family>clean</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>915</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Downtime min</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Downtime min]</local-name>
              <parent-name>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</parent-name>
              <remote-alias>Downtime min</remote-alias>
              <ordinal>9</ordinal>
              <family>clean</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_EABEC40FA4844A2EA82A40D4DF543E52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub Category]</local-name>
              <parent-name>[Category_0D0C9ECBCAF244D496A185A46517DCA9]</parent-name>
              <remote-alias>Sub Category</remote-alias>
              <ordinal>10</ordinal>
              <family>Category</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Category_0D0C9ECBCAF244D496A185A46517DCA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub Category ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Sub Category ID (Category)]</local-name>
              <parent-name>[Category_0D0C9ECBCAF244D496A185A46517DCA9]</parent-name>
              <remote-alias>Sub Category ID</remote-alias>
              <ordinal>11</ordinal>
              <family>Category</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Category_0D0C9ECBCAF244D496A185A46517DCA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Category_0D0C9ECBCAF244D496A185A46517DCA9]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>12</ordinal>
              <family>Category</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Category_0D0C9ECBCAF244D496A185A46517DCA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Defect Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Defect Type]</local-name>
              <parent-name>[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]</parent-name>
              <remote-alias>Defect Type</remote-alias>
              <ordinal>13</ordinal>
              <family>Defects Type</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Defect Type ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Defect Type ID (Defects Type)]</local-name>
              <parent-name>[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]</parent-name>
              <remote-alias>Defect Type ID</remote-alias>
              <ordinal>14</ordinal>
              <family>Defects Type</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sort</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Sort]</local-name>
              <parent-name>[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]</parent-name>
              <remote-alias>Sort</remote-alias>
              <ordinal>15</ordinal>
              <family>Defects Type</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Defect</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Defect]</local-name>
              <parent-name>[Defects_27937EA9085C48D79DACBA6740F0112B]</parent-name>
              <remote-alias>Defect</remote-alias>
              <ordinal>16</ordinal>
              <family>Defects</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>272</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Defects_27937EA9085C48D79DACBA6740F0112B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Defect ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Defect ID (Defects)]</local-name>
              <parent-name>[Defects_27937EA9085C48D79DACBA6740F0112B]</parent-name>
              <remote-alias>Defect ID</remote-alias>
              <ordinal>17</ordinal>
              <family>Defects</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>305</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Defects_27937EA9085C48D79DACBA6740F0112B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Material Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Material Type]</local-name>
              <parent-name>[Material_C33DE6C297B249469A20A24C7F03ACC0]</parent-name>
              <remote-alias>Material Type</remote-alias>
              <ordinal>18</ordinal>
              <family>Material</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Material_C33DE6C297B249469A20A24C7F03ACC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Material Type ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Material Type ID (Material)]</local-name>
              <parent-name>[Material_C33DE6C297B249469A20A24C7F03ACC0]</parent-name>
              <remote-alias>Material Type ID</remote-alias>
              <ordinal>19</ordinal>
              <family>Material</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Material_C33DE6C297B249469A20A24C7F03ACC0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Plant]</local-name>
              <parent-name>[Plant_08CE5B58621E46E7BB41FF269845F034]</parent-name>
              <remote-alias>Plant</remote-alias>
              <ordinal>20</ordinal>
              <family>Plant</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Plant_08CE5B58621E46E7BB41FF269845F034]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plant ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Plant ID (Plant)]</local-name>
              <parent-name>[Plant_08CE5B58621E46E7BB41FF269845F034]</parent-name>
              <remote-alias>Plant ID</remote-alias>
              <ordinal>21</ordinal>
              <family>Plant</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Plant_08CE5B58621E46E7BB41FF269845F034]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vendor</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Vendor]</local-name>
              <parent-name>[Vendor_9FAA39299A8342B8BEA9B416A84B1F29]</parent-name>
              <remote-alias>Vendor</remote-alias>
              <ordinal>22</ordinal>
              <family>Vendor</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>326</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vendor_9FAA39299A8342B8BEA9B416A84B1F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vendor ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Vendor ID (Vendor)]</local-name>
              <parent-name>[Vendor_9FAA39299A8342B8BEA9B416A84B1F29]</parent-name>
              <remote-alias>Vendor ID</remote-alias>
              <ordinal>23</ordinal>
              <family>Vendor</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>328</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vendor_9FAA39299A8342B8BEA9B416A84B1F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Vendor:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alphadax&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dingfax&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;geofind&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Goldentechi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kincorporation&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lamlab&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;mathtouch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Planethouse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;saltlab&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sanlab&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;silfase&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solostreet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;tamplex&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vaiataxon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zaamhouse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;zen-holdings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cityis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Daltfax&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Faseelectronics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fixace&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gogokeying&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Golddexon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hayholding&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plexlamway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Silverace&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solholdings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;stripzim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Villacom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Xx-dotone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;xx-way&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yearcorporation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zoodrill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;citydexon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Donplanet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fasetech&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faseway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fasezim&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fin-cone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fixcan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Freebam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gravemedia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;O-ace&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Recode&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solohex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tempfan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Viatom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimjiit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zuntone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daltcare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dingcan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Funlatlex&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inzone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;K-antex&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laex&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Linetone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mediaware&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plustaxon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qvofix&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ronplanet&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scotline&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;wareholding&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zentrax&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;zoofan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zuntexon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;acequote&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;bamity&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Conelane&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dentoelectrics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dingquokix&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Newzap&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plextechi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pluslam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saltfan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scotcan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Silverfase&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Subdrill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tamcan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Warelane&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zathlane&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zerhouse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canecare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canemedkix&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Constreet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fasezoomfix&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faxron&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finlux&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexidom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namelectronics&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ontotam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plusla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saohow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Silver-line&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singleholdings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Streetlam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zapline&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zumcane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canetechnology&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;doubleis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Howtaxon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Icedox&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iselectrics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joygreen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;O-job&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ontohatron&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plusity&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sonbam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Strongcane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Strongtechnology&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;techmedia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;tinron&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Xx-planet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Baselux&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;bluecorporation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;conestreet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Faseron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Funfintech&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ganzlane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Goodtechno&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Plustax&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quadplanet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Runhigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Streetplus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;tampquote&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tantechi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Y-flex&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Y-zoom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;zathhow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;betaity&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canex&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coneranron&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damdexon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ganzsannix&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Goodquoing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;J-lax&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joyzim&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Medcan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Medialax&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saokeycane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Striplane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;tres-tone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tripplekix&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unatrax&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zotfan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Conehotice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Donware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;dripkix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Duoflex&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Howelectrics&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Howplanet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Instrip&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;K-is&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scothouse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scotlex&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunjob&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Triootity&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Whitekix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Xx-canex&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimex&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zunhouse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Condexon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D-quadlux&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Donelectrics&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dongbiolex&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Good-find&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gravetech&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kinice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Labdox&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latgotrax&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lexiplus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;nimlab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tantax&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warecity&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;zummatax&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zunzone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canphase&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D-zohex&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Donremlane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faxotfind&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ganjazone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Konknix&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Linezatlam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Opebase&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Physcone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;roundphase&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solozap&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Technodax&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Treedrill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Truebam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;una-phase&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vivazim&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bamgeohigh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Condintex&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dingity&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Donglax&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Goldenbam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ittam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Keystreet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Opehouse&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;openzap&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ronvivalam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;scotquote&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stimmedia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Toncode&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vaiazozice&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zamholdings&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zerfax&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beta-ron&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bluezoombam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carekix&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dongtinlux&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Duodax&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flexplex&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Inchholdings&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indigoice&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jaydox&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Keyzunbase&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ozeris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roundlam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stimcore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Templax&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zummatexon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Citytone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danfan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dripvivadex&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Funlax&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hexzim&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Itcantrans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Planetware&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Reddoit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Redozetam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ronlamice&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamholding&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trustcorporation&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unoex&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vaiazoom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zamlane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zunice&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anmedia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bamtechnology&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dongbase&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ganz-is&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceelectrics&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indi-dox&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lazap&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;O-tom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;planetron&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ranmedia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;san-plex&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trio-dax&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tripple-fax&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trueplus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;villahouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zerlane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aptaxon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;apzone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blueit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duo-fase&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Goldenlex&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;hottaxon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Itdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jaylane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quotelane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saocity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Siliconcore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Statway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Strongdax&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Subvivais&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;unaity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;xx-bam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Blue-tech&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canace&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fax-ex&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faxzumtrax&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;geohigh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greentech&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hotity&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jobtechnology&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kantone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latcore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quotefix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rankphase&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Technoline&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viacane&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Whitefan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;zotit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anzammedia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Daltron&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dontam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indibase&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joyancom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matdex&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mathing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matsanice&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rancan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scotfase&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamtexon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonsanhigh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ventocore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;white-high&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Y-strip&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yearlex&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Conzumzap&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;dan-high&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dentocity&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Geoit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hexunobam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isdexon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;re-can&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saozoomtex&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singlejob&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sonlex&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sonzamace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Unahigh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warebam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimity&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zoomhex&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zotcare&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Defect:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bad Parameters&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bad Seams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Damaged Parts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Not Certified&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Damaged in Transit&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Misc&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Missing Components&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Warped&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Holes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Out of Spec&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scratches&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wrong Shade of Color&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Contamination&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Loose Core&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Dents&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bad Welding&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Foreign Material&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Leaking Packaging&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Printing Defects&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Material Type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Film&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Valves&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Corrugate&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mechanicals&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glass&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raw Materials&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wires&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Printed Materials&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Drives&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Molds&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Motors&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pump&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tape&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hardware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Electrolytes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Composites&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Packaging&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Controllers&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Defect Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Rejected&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;No Impact&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Impact&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Category' id='Category_0D0C9ECBCAF244D496A185A46517DCA9'>
            <properties context=''>
              <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Category' table='[Category$]' type='table'>
                <columns gridOrigin='A1:C7:no:A1:C7:0' header='yes' outcome='6'>
                  <column datatype='string' name='Sub Category' ordinal='0' />
                  <column datatype='integer' name='Sub Category ID' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Category_0D0C9ECBCAF244D496A185A46517DCA9' table='[Extract].[Category_0D0C9ECBCAF244D496A185A46517DCA9]' type='table' />
            </properties>
          </object>
          <object caption='Defects Type' id='Defects Type_5C3F67170C244D888B4BDEA85BA059E7'>
            <properties context=''>
              <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Defects Type' table='[&apos;Defects Type$&apos;]' type='table'>
                <columns gridOrigin='A1:C4:no:A1:C4:0' header='yes' outcome='6'>
                  <column datatype='string' name='Defect Type' ordinal='0' />
                  <column datatype='integer' name='Defect Type ID' ordinal='1' />
                  <column datatype='integer' name='Sort' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Defects Type_5C3F67170C244D888B4BDEA85BA059E7' table='[Extract].[Defects Type_5C3F67170C244D888B4BDEA85BA059E7]' type='table' />
            </properties>
          </object>
          <object caption='Defects' id='Defects_27937EA9085C48D79DACBA6740F0112B'>
            <properties context=''>
              <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Defects' table='[Defects$]' type='table'>
                <columns gridOrigin='A1:B306:no:A1:B306:0' header='yes' outcome='6'>
                  <column datatype='string' name='Defect' ordinal='0' />
                  <column datatype='integer' name='Defect ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Defects_27937EA9085C48D79DACBA6740F0112B' table='[Extract].[Defects_27937EA9085C48D79DACBA6740F0112B]' type='table' />
            </properties>
          </object>
          <object caption='Material' id='Material_C33DE6C297B249469A20A24C7F03ACC0'>
            <properties context=''>
              <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Material' table='[Material$]' type='table'>
                <columns gridOrigin='A1:B23:no:A1:B23:0' header='yes' outcome='6'>
                  <column datatype='string' name='Material Type' ordinal='0' />
                  <column datatype='integer' name='Material Type ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Material_C33DE6C297B249469A20A24C7F03ACC0' table='[Extract].[Material_C33DE6C297B249469A20A24C7F03ACC0]' type='table' />
            </properties>
          </object>
          <object caption='Plant asd' id='Plant_08CE5B58621E46E7BB41FF269845F034'>
            <properties context=''>
              <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Plant' table='[Plant$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='6'>
                  <column datatype='string' name='Plant' ordinal='0' />
                  <column datatype='integer' name='Plant ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Plant_08CE5B58621E46E7BB41FF269845F034' table='[Extract].[Plant_08CE5B58621E46E7BB41FF269845F034]' type='table' />
            </properties>
          </object>
          <object caption='Vendor asd' id='Vendor_9FAA39299A8342B8BEA9B416A84B1F29'>
            <properties context=''>
              <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='Vendor' table='[Vendor$]' type='table'>
                <columns gridOrigin='A1:B329:no:A1:B329:0' header='yes' outcome='6'>
                  <column datatype='string' name='Vendor' ordinal='0' />
                  <column datatype='integer' name='Vendor ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Vendor_9FAA39299A8342B8BEA9B416A84B1F29' table='[Extract].[Vendor_9FAA39299A8342B8BEA9B416A84B1F29]' type='table' />
            </properties>
          </object>
          <object caption='clean' id='clean_EABEC40FA4844A2EA82A40D4DF543E52'>
            <properties context=''>
              <relation connection='excel-direct.0nbq6ot1yk88o118ghcnw15pdeh0' name='clean' table='[clean$]' type='table'>
                <columns gridOrigin='A1:J5952:no:A1:J5952:0' header='yes' outcome='6'>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Sub Category ID' ordinal='1' />
                  <column datatype='integer' name='Plant ID' ordinal='2' />
                  <column datatype='integer' name='Vendor ID' ordinal='3' />
                  <column datatype='integer' name='Material ID' ordinal='4' />
                  <column datatype='integer' name='Defect Type ID' ordinal='5' />
                  <column datatype='integer' name='Material Type ID' ordinal='6' />
                  <column datatype='integer' name='Defect ID' ordinal='7' />
                  <column datatype='integer' name='Defect Qty' ordinal='8' />
                  <column datatype='integer' name='Downtime min' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='clean_EABEC40FA4844A2EA82A40D4DF543E52' table='[Extract].[clean_EABEC40FA4844A2EA82A40D4DF543E52]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Sub Category ID]' />
              <expression op='[Sub Category ID (Category)]' />
            </expression>
            <first-end-point object-id='clean_EABEC40FA4844A2EA82A40D4DF543E52' />
            <second-end-point object-id='Category_0D0C9ECBCAF244D496A185A46517DCA9' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Defect Type ID]' />
              <expression op='[Defect Type ID (Defects Type)]' />
            </expression>
            <first-end-point object-id='clean_EABEC40FA4844A2EA82A40D4DF543E52' />
            <second-end-point object-id='Defects Type_5C3F67170C244D888B4BDEA85BA059E7' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Defect ID]' />
              <expression op='[Defect ID (Defects)]' />
            </expression>
            <first-end-point object-id='clean_EABEC40FA4844A2EA82A40D4DF543E52' />
            <second-end-point object-id='Defects_27937EA9085C48D79DACBA6740F0112B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Material Type ID]' />
              <expression op='[Material Type ID (Material)]' />
            </expression>
            <first-end-point object-id='clean_EABEC40FA4844A2EA82A40D4DF543E52' />
            <second-end-point object-id='Material_C33DE6C297B249469A20A24C7F03ACC0' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Plant ID]' />
              <expression op='[Plant ID (Plant)]' />
            </expression>
            <first-end-point object-id='clean_EABEC40FA4844A2EA82A40D4DF543E52' />
            <second-end-point object-id='Plant_08CE5B58621E46E7BB41FF269845F034' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Vendor ID]' />
              <expression op='[Vendor ID (Vendor)]' />
            </expression>
            <first-end-point object-id='clean_EABEC40FA4844A2EA82A40D4DF543E52' />
            <second-end-point object-id='Vendor_9FAA39299A8342B8BEA9B416A84B1F29' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
      <datasources>
        <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
      </datasources>
      <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]' included-values='in-range'>
        <min>#2013-01-01#</min>
        <max>#2024-10-10#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_65215F445352494AB880945EAF3F7D97]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Defect Analysis (as required)' type='sheet' worksheet='Monthly Defect Trends by Material (Detailed)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Defect Analysis (as required)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name=' Downtime Analysis (Total Downtime by Vendor)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Downtime min]' role='measure' type='quantitative' />
            <column datatype='string' name='[Vendor]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendor]' derivation='None' name='[none:Vendor:nk]' pivot='key' type='nominal' />
            <column-instance column='[Downtime min]' derivation='Sum' name='[sum:Downtime min:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]</column>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]' palette='red_black_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]' value='Total Downtime min'>
              <formatted-text>
                <run>Total Downtime min</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]' value='Date'>
              <formatted-text>
                <run bold='true'>Date</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]</rows>
        <cols>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]</cols>
      </table>
      <simple-id uuid='{167E9874-02CD-4585-B43B-16A2A5C38156}' />
    </worksheet>
    <worksheet name='Defect Quantity Distribution by Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Defect Qty]' role='measure' type='quantitative' />
            <column datatype='string' name='[Defect Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Defect]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defect Type]' derivation='None' name='[none:Defect Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Defect]' derivation='None' name='[none:Defect:nk]' pivot='key' type='nominal' />
            <column-instance column='[Defect Qty]' derivation='Sum' name='[sum:Defect Qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Defect Qty])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Defect:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect:nk]</column>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</rows>
        <cols>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect:nk]</cols>
      </table>
      <simple-id uuid='{CC1E527E-E62A-4A23-90D0-5225C1BF7E44}' />
    </worksheet>
    <worksheet name='Defect Type Breakdown by Material'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Defect Qty]' role='measure' type='quantitative' />
            <column datatype='string' name='[Defect Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Material Type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defect Type]' derivation='None' name='[none:Defect Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Material Type]' derivation='None' name='[none:Material Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Defect Qty]' derivation='Sum' name='[pcto:sum:Defect Qty:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Defect Qty]' derivation='Sum' name='[sum:Defect Qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Defect Qty])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Material Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</column>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' />
              <wedge-size column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
              <size column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[pcto:sum:Defect Qty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</cols>
      </table>
      <simple-id uuid='{84CF0048-C328-4A9F-A56A-F4C98A54D3B8}' />
    </worksheet>
    <worksheet name='Defects By Plant Location'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Defect Qty]' role='measure' type='quantitative' />
            <column datatype='string' name='[Defect Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Plant]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defect Type]' derivation='None' name='[none:Defect Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Plant]' derivation='None' name='[none:Plant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Defect Qty]' derivation='Sum' name='[sum:Defect Qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Plant:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' value='Total Defect Qty'>
              <formatted-text>
                <run>Total Defect Qty</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Plant:nk]</rows>
        <cols>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</cols>
      </table>
      <simple-id uuid='{BC9AFFA7-720F-435D-A80C-2C7737EEF3B8}' />
    </worksheet>
    <worksheet name='Material Usage and Defect Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Defect Qty]' role='measure' type='quantitative' />
            <column datatype='string' name='[Defect Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Material Type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defect Type]' derivation='None' name='[none:Defect Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Material Type]' derivation='None' name='[none:Material Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Defect Qty]' derivation='Sum' name='[sum:Defect Qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Defect Qty])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Material Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</column>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</rows>
        <cols>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</cols>
      </table>
      <simple-id uuid='{DA3439A2-3C97-484C-B02E-8578478C8F95}' />
    </worksheet>
    <worksheet name='Monthly Defect Trends by Material'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Defect Qty]' role='measure' type='quantitative' />
            <column datatype='string' name='[Defect Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Material Type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defect Type]' derivation='None' name='[none:Defect Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Material Type]' derivation='None' name='[none:Material Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Defect Qty]' derivation='Sum' name='[sum:Defect Qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' />
              <lod column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</rows>
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='98'>
            <formatted-text>
              <run bold='true'>Raw Material</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields>
                        <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
                      <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</field>
                      <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;No Impact&quot;</value>
                    <value>&quot;Raw Materials&quot;</value>
                    <value>8070234</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='98' y='21' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='66'>
            <formatted-text>
              <run bold='true'>Carton</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.487097'>
                  <node-reference />
                </x-coord>
                <y-coord axis-value='3843435.3068783069'>
                  <node-reference>
                    <axis>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-88' y='-55' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='64'>
            <formatted-text>
              <run bold='true'>Film</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields>
                        <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
                      <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</field>
                      <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Rejected&quot;</value>
                    <value>&quot;Film&quot;</value>
                    <value>3460351</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='121' y='-10' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{020AEF63-863D-42DB-AB11-DEA215CA3188}' />
    </worksheet>
    <worksheet name='Monthly Defect Trends by Material (Detailed)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Defect Qty]' role='measure' type='quantitative' />
            <column datatype='string' name='[Defect Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Material Type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defect Type]' derivation='None' name='[none:Defect Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Material Type]' derivation='None' name='[none:Material Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Defect Qty]' derivation='Sum' name='[sum:Defect Qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]'>
            <groupfilter function='level-members' level='[none:Material Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</column>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</rows>
        <cols>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{9E641818-C3E5-408B-AE49-B356D7623EBC}' />
    </worksheet>
    <worksheet name='Top Defects by Vendor'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Defect Qty]' role='measure' type='quantitative' />
            <column datatype='string' name='[Defect Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Material Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Vendor]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defect Type]' derivation='None' name='[none:Defect Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Material Type]' derivation='None' name='[none:Material Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vendor]' derivation='None' name='[none:Vendor:nk]' pivot='key' type='nominal' />
            <column-instance column='[Defect Qty]' derivation='Sum' name='[sum:Defect Qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Defect Qty])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Vendor:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]</column>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' value='Defect Impact'>
              <formatted-text>
                <run>Defect Impact</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]</rows>
        <cols>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</cols>
      </table>
      <simple-id uuid='{62FC4EFF-4A5C-40E5-AAD2-1A5B4220B3B8}' />
    </worksheet>
    <worksheet name='Total Defect Quantities'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Total Defect Quantities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column aggregation='None' caption='Defect Qty (bin)' datatype='integer' name='[Defect Qty (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[Defect Qty]' peg='0' size='15156' />
            </column>
            <column datatype='integer' name='[Defect Qty]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defect Qty (bin)]' derivation='None' name='[none:Defect Qty (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defect Qty]' derivation='Sum' name='[sum:Defect Qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' palette='red_black_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' value='Total Defect Qty'>
              <formatted-text>
                <run>Total Defect Qty</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]</rows>
        <cols>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Qty (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Qty (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{F65DA7F7-AF0D-4E36-8CD7-7ACA68C2B496}' />
    </worksheet>
    <worksheet name='Vendor Benchmarking (Defect Rate by Vendor)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Defect Qty]' role='measure' type='quantitative' />
            <column datatype='string' name='[Vendor]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendor]' derivation='None' name='[none:Vendor:nk]' pivot='key' type='nominal' />
            <column-instance column='[Defect Qty]' derivation='Sum' name='[pcto:sum:Defect Qty:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Defect Qty]' derivation='Sum' name='[pcto:sum:Defect Qty:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Defect Qty]' derivation='Sum' name='[sum:Defect Qty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Defect Qty])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;acequote&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Alphadax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Anmedia&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Anzammedia&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Aptaxon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;apzone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Bamgeohigh&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;bamity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Bamtechnology&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Baselux&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Beta-ron&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;betaity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Blue-tech&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;bluecorporation&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Blueit&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Bluezoombam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Canace&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Canecare&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Canemedkix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Canetechnology&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Canex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Canphase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Carekix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;citydexon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Cityis&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Citytone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Condexon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Condintex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Conehotice&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Conelane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Coneranron&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;conestreet&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Constreet&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Conzumzap&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;D-quadlux&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;D-zohex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Daltcare&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Daltfax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Daltron&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Damdexon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;dan-high&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Danfan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dentocity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dentoelectrics&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dingcan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dingfax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dingity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dingquokix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Donelectrics&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dongbase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dongbiolex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Donglax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dongtinlux&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Donplanet&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Donremlane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dontam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Donware&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;doubleis&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;dripkix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Dripvivadex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Duo-fase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Duodax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Duoflex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Faseelectronics&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Faseron&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Fasetech&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Faseway&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Fasezim&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Fasezoomfix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Fax-ex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Faxotfind&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Faxron&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Faxzumtrax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Fin-cone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Finlux&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Fixace&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Fixcan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Flexplex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Freebam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Funfintech&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Funlatlex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Funlax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ganjazone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;ganz-is&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ganzlane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ganzsannix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;geofind&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;geohigh&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Geoit&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Gogokeying&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Golddexon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Goldenbam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Goldenlex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Goldentechi&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Good-find&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Goodquoing&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Goodtechno&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Gravemedia&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Gravetech&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Greentech&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Hayholding&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Hexunobam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;hexzim&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;hotity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;hottaxon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Howelectrics&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Howplanet&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Howtaxon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Icedox&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Iceelectrics&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Inchholdings&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Indi-dox&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Indibase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Indigoice&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Instrip&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Inzone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Isdexon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Iselectrics&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Itcantrans&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Itdom&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ittam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;J-lax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Jaydox&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Jaylane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Jobtechnology&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Joyancom&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Joygreen&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Joyzim&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;K-antex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;K-is&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Kantone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Keystreet&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Keyzunbase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Kincorporation&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Kinice&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Konknix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Labdox&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Laex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Lamlab&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Latcore&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Latgotrax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Lazap&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Lexidom&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Lexiplus&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Linetone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Linezatlam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Matdex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Mathing&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;mathtouch&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Matsanice&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Medcan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Medialax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Mediaware&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Namelectronics&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Newzap&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;nimlab&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;O-ace&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;O-job&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;O-tom&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ontohatron&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;ontotam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Opebase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Opehouse&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;openzap&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ozeris&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Physcone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Planethouse&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;planetron&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Planetware&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Plexlamway&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Plextechi&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Plusity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Plusla&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Pluslam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Plustax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Plustaxon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Quadplanet&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Quotefix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Quotelane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Qvofix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Rancan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Rankphase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ranmedia&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;re-can&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Recode&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Reddoit&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Redozetam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ronlamice&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ronplanet&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ronvivalam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Roundlam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;roundphase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Runhigh&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Saltfan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;saltlab&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;san-plex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Sanin&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Sanlab&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Saocity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Saohow&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Saokeycane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Saozoomtex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Scotcan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Scotfase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Scothouse&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Scotlex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Scotline&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;scotquote&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;silfase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Siliconcore&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Silver-line&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Silverace&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Silverfase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Singleholdings&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Singlejob&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Solholdings&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Solohex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Solostreet&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Solozap&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Sonbam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Sonlex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Sonzamace&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Statway&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Stimcore&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Stimmedia&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Streetlam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Streetplus&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Striplane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;stripzim&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Strongcane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Strongdax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Strongtechnology&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Subdrill&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Subvivais&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Sunjob&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Tamcan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Tamholding&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;tamplex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;tampquote&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Tamtexon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Tantax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Tantechi&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;techmedia&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Technodax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Technoline&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Tempfan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Templax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;tinron&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Toncode&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Tonsanhigh&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Treedrill&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;tres-tone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Trio-dax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Triootity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Tripple-fax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Tripplekix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Truebam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Trueplus&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Trustcorporation&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;una-phase&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Unahigh&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;unaity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Unatrax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Unoex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Vaiataxon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Vaiazoom&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Vaiazozice&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Ventocore&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Viacane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Viatom&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Villacom&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;villahouse&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Vivazim&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Warebam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Warecity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;wareholding&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Warelane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;white-high&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Whitefan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Whitekix&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;xx-bam&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Xx-canex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Xx-dotone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Xx-planet&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;xx-way&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Y-flex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Y-strip&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Y-zoom&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Yearcorporation&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Yearlex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zaamhouse&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zamholdings&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zamlane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zapline&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;zathhow&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zathlane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;zen-holdings&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zentrax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zerfax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zerhouse&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zerlane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zimex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zimity&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zimjiit&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zoodrill&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;zoofan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zoomhex&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zotcare&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zotfan&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;zotit&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zumcane&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;zummatax&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zummatexon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zunhouse&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zunice&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zuntexon&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zuntone&quot;' />
                  <groupfilter function='member' level='[none:Vendor:nk]' member='&quot;Zunzone&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Solholdings&quot;</bucket>
              <bucket>&quot;Plustax&quot;</bucket>
              <bucket>&quot;Quotelane&quot;</bucket>
              <bucket>&quot;Dentocity&quot;</bucket>
              <bucket>&quot;Recode&quot;</bucket>
              <bucket>&quot;ontotam&quot;</bucket>
              <bucket>&quot;Instrip&quot;</bucket>
              <bucket>&quot;Bamtechnology&quot;</bucket>
              <bucket>&quot;Planethouse&quot;</bucket>
              <bucket>&quot;Subdrill&quot;</bucket>
              <bucket>&quot;Zunice&quot;</bucket>
              <bucket>&quot;Yearlex&quot;</bucket>
              <bucket>&quot;Zentrax&quot;</bucket>
              <bucket>&quot;Sanin&quot;</bucket>
              <bucket>&quot;Ganjazone&quot;</bucket>
              <bucket>&quot;Whitefan&quot;</bucket>
              <bucket>&quot;J-lax&quot;</bucket>
              <bucket>&quot;Vaiazozice&quot;</bucket>
              <bucket>&quot;Strongtechnology&quot;</bucket>
              <bucket>&quot;Keyzunbase&quot;</bucket>
              <bucket>&quot;xx-way&quot;</bucket>
              <bucket>&quot;tampquote&quot;</bucket>
              <bucket>&quot;Blueit&quot;</bucket>
              <bucket>&quot;Saozoomtex&quot;</bucket>
              <bucket>&quot;Gravemedia&quot;</bucket>
              <bucket>&quot;Singleholdings&quot;</bucket>
              <bucket>&quot;Sunjob&quot;</bucket>
              <bucket>&quot;ganz-is&quot;</bucket>
              <bucket>&quot;Sanlab&quot;</bucket>
              <bucket>&quot;Plextechi&quot;</bucket>
              <bucket>&quot;Reddoit&quot;</bucket>
              <bucket>&quot;Ventocore&quot;</bucket>
              <bucket>&quot;zoofan&quot;</bucket>
              <bucket>&quot;Labdox&quot;</bucket>
              <bucket>&quot;Opebase&quot;</bucket>
              <bucket>&quot;Fax-ex&quot;</bucket>
              <bucket>&quot;Striplane&quot;</bucket>
              <bucket>&quot;scotquote&quot;</bucket>
              <bucket>&quot;O-job&quot;</bucket>
              <bucket>&quot;Zummatexon&quot;</bucket>
              <bucket>&quot;Daltfax&quot;</bucket>
              <bucket>&quot;Faseron&quot;</bucket>
              <bucket>&quot;hottaxon&quot;</bucket>
              <bucket>&quot;Zotcare&quot;</bucket>
              <bucket>&quot;O-ace&quot;</bucket>
              <bucket>&quot;Streetlam&quot;</bucket>
              <bucket>&quot;Conehotice&quot;</bucket>
              <bucket>&quot;Trio-dax&quot;</bucket>
              <bucket>&quot;Zaamhouse&quot;</bucket>
              <bucket>&quot;Scotcan&quot;</bucket>
              <bucket>&quot;Tamholding&quot;</bucket>
              <bucket>&quot;Rancan&quot;</bucket>
              <bucket>&quot;Zuntexon&quot;</bucket>
              <bucket>&quot;nimlab&quot;</bucket>
              <bucket>&quot;roundphase&quot;</bucket>
              <bucket>&quot;hotity&quot;</bucket>
              <bucket>&quot;Canex&quot;</bucket>
              <bucket>&quot;Condintex&quot;</bucket>
              <bucket>&quot;Howtaxon&quot;</bucket>
              <bucket>&quot;Ozeris&quot;</bucket>
              <bucket>&quot;Xx-dotone&quot;</bucket>
              <bucket>&quot;Y-flex&quot;</bucket>
              <bucket>&quot;xx-bam&quot;</bucket>
              <bucket>&quot;Singlejob&quot;</bucket>
              <bucket>&quot;Fasetech&quot;</bucket>
              <bucket>&quot;Canemedkix&quot;</bucket>
              <bucket>&quot;Scotlex&quot;</bucket>
              <bucket>&quot;Lazap&quot;</bucket>
              <bucket>&quot;Goldentechi&quot;</bucket>
              <bucket>&quot;Newzap&quot;</bucket>
              <bucket>&quot;Unoex&quot;</bucket>
              <bucket>&quot;Dontam&quot;</bucket>
              <bucket>&quot;Laex&quot;</bucket>
              <bucket>&quot;Donelectrics&quot;</bucket>
              <bucket>&quot;Truebam&quot;</bucket>
              <bucket>&quot;Blue-tech&quot;</bucket>
              <bucket>&quot;Damdexon&quot;</bucket>
              <bucket>&quot;Dingity&quot;</bucket>
              <bucket>&quot;Icedox&quot;</bucket>
              <bucket>&quot;Duodax&quot;</bucket>
              <bucket>&quot;Zoodrill&quot;</bucket>
              <bucket>&quot;bluecorporation&quot;</bucket>
              <bucket>&quot;unaity&quot;</bucket>
              <bucket>&quot;Conzumzap&quot;</bucket>
              <bucket>&quot;Viatom&quot;</bucket>
              <bucket>&quot;Zapline&quot;</bucket>
              <bucket>&quot;K-is&quot;</bucket>
              <bucket>&quot;Trueplus&quot;</bucket>
              <bucket>&quot;Vaiataxon&quot;</bucket>
              <bucket>&quot;Tamcan&quot;</bucket>
              <bucket>&quot;Trustcorporation&quot;</bucket>
              <bucket>&quot;Mathing&quot;</bucket>
              <bucket>&quot;Dingcan&quot;</bucket>
              <bucket>&quot;Gravetech&quot;</bucket>
              <bucket>&quot;Treedrill&quot;</bucket>
              <bucket>&quot;Technoline&quot;</bucket>
              <bucket>&quot;Coneranron&quot;</bucket>
              <bucket>&quot;Donglax&quot;</bucket>
              <bucket>&quot;Joygreen&quot;</bucket>
              <bucket>&quot;Inchholdings&quot;</bucket>
              <bucket>&quot;Faseelectronics&quot;</bucket>
              <bucket>&quot;Ganzlane&quot;</bucket>
              <bucket>&quot;Aptaxon&quot;</bucket>
              <bucket>&quot;Sonzamace&quot;</bucket>
              <bucket>&quot;Freebam&quot;</bucket>
              <bucket>&quot;Constreet&quot;</bucket>
              <bucket>&quot;Xx-canex&quot;</bucket>
              <bucket>&quot;planetron&quot;</bucket>
              <bucket>&quot;Kincorporation&quot;</bucket>
              <bucket>&quot;bamity&quot;</bucket>
              <bucket>&quot;Vaiazoom&quot;</bucket>
              <bucket>&quot;white-high&quot;</bucket>
              <bucket>&quot;Inzone&quot;</bucket>
              <bucket>&quot;D-quadlux&quot;</bucket>
              <bucket>&quot;Faxotfind&quot;</bucket>
              <bucket>&quot;Latcore&quot;</bucket>
              <bucket>&quot;Ganzsannix&quot;</bucket>
              <bucket>&quot;Goldenbam&quot;</bucket>
              <bucket>&quot;Strongcane&quot;</bucket>
              <bucket>&quot;Bluezoombam&quot;</bucket>
              <bucket>&quot;Gogokeying&quot;</bucket>
              <bucket>&quot;Baselux&quot;</bucket>
              <bucket>&quot;Strongdax&quot;</bucket>
              <bucket>&quot;dan-high&quot;</bucket>
              <bucket>&quot;citydexon&quot;</bucket>
              <bucket>&quot;Plusla&quot;</bucket>
              <bucket>&quot;Zunhouse&quot;</bucket>
              <bucket>&quot;Indi-dox&quot;</bucket>
              <bucket>&quot;mathtouch&quot;</bucket>
              <bucket>&quot;Zerhouse&quot;</bucket>
              <bucket>&quot;Funlax&quot;</bucket>
              <bucket>&quot;Scotfase&quot;</bucket>
              <bucket>&quot;Mediaware&quot;</bucket>
              <bucket>&quot;zummatax&quot;</bucket>
              <bucket>&quot;Donremlane&quot;</bucket>
              <bucket>&quot;zotit&quot;</bucket>
              <bucket>&quot;tres-tone&quot;</bucket>
              <bucket>&quot;Opehouse&quot;</bucket>
              <bucket>&quot;Plusity&quot;</bucket>
              <bucket>&quot;Stimcore&quot;</bucket>
              <bucket>&quot;Fixace&quot;</bucket>
              <bucket>&quot;Runhigh&quot;</bucket>
              <bucket>&quot;Duo-fase&quot;</bucket>
              <bucket>&quot;Zimity&quot;</bucket>
              <bucket>&quot;Faseway&quot;</bucket>
              <bucket>&quot;Saohow&quot;</bucket>
              <bucket>&quot;Donware&quot;</bucket>
              <bucket>&quot;Anmedia&quot;</bucket>
              <bucket>&quot;Lamlab&quot;</bucket>
              <bucket>&quot;Silverfase&quot;</bucket>
              <bucket>&quot;Citytone&quot;</bucket>
              <bucket>&quot;Tonsanhigh&quot;</bucket>
              <bucket>&quot;K-antex&quot;</bucket>
              <bucket>&quot;Good-find&quot;</bucket>
              <bucket>&quot;D-zohex&quot;</bucket>
              <bucket>&quot;Quotefix&quot;</bucket>
              <bucket>&quot;Tripplekix&quot;</bucket>
              <bucket>&quot;Ronvivalam&quot;</bucket>
              <bucket>&quot;doubleis&quot;</bucket>
              <bucket>&quot;Roundlam&quot;</bucket>
              <bucket>&quot;Villacom&quot;</bucket>
              <bucket>&quot;Y-zoom&quot;</bucket>
              <bucket>&quot;Itdom&quot;</bucket>
              <bucket>&quot;Unahigh&quot;</bucket>
              <bucket>&quot;Tempfan&quot;</bucket>
              <bucket>&quot;Fasezoomfix&quot;</bucket>
              <bucket>&quot;Howplanet&quot;</bucket>
              <bucket>&quot;Iceelectrics&quot;</bucket>
              <bucket>&quot;Alphadax&quot;</bucket>
              <bucket>&quot;Conelane&quot;</bucket>
              <bucket>&quot;hexzim&quot;</bucket>
              <bucket>&quot;Joyancom&quot;</bucket>
              <bucket>&quot;Scotline&quot;</bucket>
              <bucket>&quot;Tantax&quot;</bucket>
              <bucket>&quot;Solozap&quot;</bucket>
              <bucket>&quot;Rankphase&quot;</bucket>
              <bucket>&quot;Saokeycane&quot;</bucket>
              <bucket>&quot;Keystreet&quot;</bucket>
              <bucket>&quot;techmedia&quot;</bucket>
              <bucket>&quot;Flexplex&quot;</bucket>
              <bucket>&quot;Cityis&quot;</bucket>
              <bucket>&quot;Quadplanet&quot;</bucket>
              <bucket>&quot;apzone&quot;</bucket>
              <bucket>&quot;Zoomhex&quot;</bucket>
              <bucket>&quot;Donplanet&quot;</bucket>
              <bucket>&quot;Faxron&quot;</bucket>
              <bucket>&quot;Howelectrics&quot;</bucket>
              <bucket>&quot;Ranmedia&quot;</bucket>
              <bucket>&quot;tamplex&quot;</bucket>
              <bucket>&quot;Saltfan&quot;</bucket>
              <bucket>&quot;Itcantrans&quot;</bucket>
              <bucket>&quot;Matdex&quot;</bucket>
              <bucket>&quot;Ronplanet&quot;</bucket>
              <bucket>&quot;Lexiplus&quot;</bucket>
              <bucket>&quot;Linezatlam&quot;</bucket>
              <bucket>&quot;Faxzumtrax&quot;</bucket>
              <bucket>&quot;Goodquoing&quot;</bucket>
              <bucket>&quot;Zamholdings&quot;</bucket>
              <bucket>&quot;Ontohatron&quot;</bucket>
              <bucket>&quot;Carekix&quot;</bucket>
              <bucket>&quot;Silverace&quot;</bucket>
              <bucket>&quot;Funfintech&quot;</bucket>
              <bucket>&quot;Saocity&quot;</bucket>
              <bucket>&quot;re-can&quot;</bucket>
              <bucket>&quot;Zimjiit&quot;</bucket>
              <bucket>&quot;Canecare&quot;</bucket>
              <bucket>&quot;Triootity&quot;</bucket>
              <bucket>&quot;Tripple-fax&quot;</bucket>
              <bucket>&quot;silfase&quot;</bucket>
              <bucket>&quot;acequote&quot;</bucket>
              <bucket>&quot;Dripvivadex&quot;</bucket>
              <bucket>&quot;Indibase&quot;</bucket>
              <bucket>&quot;Funlatlex&quot;</bucket>
              <bucket>&quot;Dongbiolex&quot;</bucket>
              <bucket>&quot;una-phase&quot;</bucket>
              <bucket>&quot;geohigh&quot;</bucket>
              <bucket>&quot;Medialax&quot;</bucket>
              <bucket>&quot;openzap&quot;</bucket>
              <bucket>&quot;Canetechnology&quot;</bucket>
              <bucket>&quot;Dongtinlux&quot;</bucket>
              <bucket>&quot;Yearcorporation&quot;</bucket>
              <bucket>&quot;conestreet&quot;</bucket>
              <bucket>&quot;Jaylane&quot;</bucket>
              <bucket>&quot;Hexunobam&quot;</bucket>
              <bucket>&quot;Fin-cone&quot;</bucket>
              <bucket>&quot;Lexidom&quot;</bucket>
              <bucket>&quot;Duoflex&quot;</bucket>
              <bucket>&quot;O-tom&quot;</bucket>
              <bucket>&quot;geofind&quot;</bucket>
              <bucket>&quot;Dingquokix&quot;</bucket>
              <bucket>&quot;Redozetam&quot;</bucket>
              <bucket>&quot;Tamtexon&quot;</bucket>
              <bucket>&quot;Qvofix&quot;</bucket>
              <bucket>&quot;Zunzone&quot;</bucket>
              <bucket>&quot;Technodax&quot;</bucket>
              <bucket>&quot;Jobtechnology&quot;</bucket>
              <bucket>&quot;Zotfan&quot;</bucket>
              <bucket>&quot;Stimmedia&quot;</bucket>
              <bucket>&quot;Xx-planet&quot;</bucket>
              <bucket>&quot;Beta-ron&quot;</bucket>
              <bucket>&quot;Plexlamway&quot;</bucket>
              <bucket>&quot;Tantechi&quot;</bucket>
              <bucket>&quot;Siliconcore&quot;</bucket>
              <bucket>&quot;Warebam&quot;</bucket>
              <bucket>&quot;Fasezim&quot;</bucket>
              <bucket>&quot;Namelectronics&quot;</bucket>
              <bucket>&quot;Whitekix&quot;</bucket>
              <bucket>&quot;villahouse&quot;</bucket>
              <bucket>&quot;Solostreet&quot;</bucket>
              <bucket>&quot;Warelane&quot;</bucket>
              <bucket>&quot;Ronlamice&quot;</bucket>
              <bucket>&quot;Anzammedia&quot;</bucket>
              <bucket>&quot;Plustaxon&quot;</bucket>
              <bucket>&quot;Kinice&quot;</bucket>
              <bucket>&quot;Physcone&quot;</bucket>
              <bucket>&quot;Greentech&quot;</bucket>
              <bucket>&quot;Medcan&quot;</bucket>
              <bucket>&quot;Zerfax&quot;</bucket>
              <bucket>&quot;Sonbam&quot;</bucket>
              <bucket>&quot;Jaydox&quot;</bucket>
              <bucket>&quot;Golddexon&quot;</bucket>
              <bucket>&quot;zathhow&quot;</bucket>
              <bucket>&quot;Subvivais&quot;</bucket>
              <bucket>&quot;Isdexon&quot;</bucket>
              <bucket>&quot;Zuntone&quot;</bucket>
              <bucket>&quot;Zumcane&quot;</bucket>
              <bucket>&quot;Zoncone&quot;</bucket>
              <bucket>&quot;Zimex&quot;</bucket>
              <bucket>&quot;Zerlane&quot;</bucket>
              <bucket>&quot;zen-holdings&quot;</bucket>
              <bucket>&quot;Zathlane&quot;</bucket>
              <bucket>&quot;Zamlane&quot;</bucket>
              <bucket>&quot;Y-strip&quot;</bucket>
              <bucket>&quot;wareholding&quot;</bucket>
              <bucket>&quot;Warecity&quot;</bucket>
              <bucket>&quot;Vivazim&quot;</bucket>
              <bucket>&quot;Viacane&quot;</bucket>
              <bucket>&quot;Unatrax&quot;</bucket>
              <bucket>&quot;Toncode&quot;</bucket>
              <bucket>&quot;tinron&quot;</bucket>
              <bucket>&quot;Templax&quot;</bucket>
              <bucket>&quot;stripzim&quot;</bucket>
              <bucket>&quot;Streetplus&quot;</bucket>
              <bucket>&quot;Statway&quot;</bucket>
              <bucket>&quot;Sonlex&quot;</bucket>
              <bucket>&quot;Solohex&quot;</bucket>
              <bucket>&quot;Silver-line&quot;</bucket>
              <bucket>&quot;Scothouse&quot;</bucket>
              <bucket>&quot;san-plex&quot;</bucket>
              <bucket>&quot;saltlab&quot;</bucket>
              <bucket>&quot;Pluslam&quot;</bucket>
              <bucket>&quot;Planetware&quot;</bucket>
              <bucket>&quot;Planetline&quot;</bucket>
              <bucket>&quot;Overtam&quot;</bucket>
              <bucket>&quot;Matsanice&quot;</bucket>
              <bucket>&quot;Linetone&quot;</bucket>
              <bucket>&quot;Latgotrax&quot;</bucket>
              <bucket>&quot;Konknix&quot;</bucket>
              <bucket>&quot;Kantone&quot;</bucket>
              <bucket>&quot;Joyzim&quot;</bucket>
              <bucket>&quot;Ittam&quot;</bucket>
              <bucket>&quot;Iselectrics&quot;</bucket>
              <bucket>&quot;Indigoice&quot;</bucket>
              <bucket>&quot;Hayholding&quot;</bucket>
              <bucket>&quot;hat-core&quot;</bucket>
              <bucket>&quot;Groovestrip&quot;</bucket>
              <bucket>&quot;Goodtechno&quot;</bucket>
              <bucket>&quot;Goldenlex&quot;</bucket>
              <bucket>&quot;Geoit&quot;</bucket>
              <bucket>&quot;Fixcan&quot;</bucket>
              <bucket>&quot;Finlux&quot;</bucket>
              <bucket>&quot;dripkix&quot;</bucket>
              <bucket>&quot;Dongbase&quot;</bucket>
              <bucket>&quot;Dingfax&quot;</bucket>
              <bucket>&quot;Dentoelectrics&quot;</bucket>
              <bucket>&quot;Danfan&quot;</bucket>
              <bucket>&quot;Daltron&quot;</bucket>
              <bucket>&quot;Daltcare&quot;</bucket>
              <bucket>&quot;Condexon&quot;</bucket>
              <bucket>&quot;Canphase&quot;</bucket>
              <bucket>&quot;Cannamcon&quot;</bucket>
              <bucket>&quot;Canace&quot;</bucket>
              <bucket>&quot;betaity&quot;</bucket>
              <bucket>&quot;Bamgeohigh&quot;</bucket>
              <bucket>&quot;applanet&quot;</bucket>
              <bucket>&quot;Alphafan&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[pcto:sum:Defect Qty:qk:1]' included-values='non-null' />
          <slices>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</column>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[pcto:sum:Defect Qty:qk:1]</column>
            <column>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' palette='red_black_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[pcto:sum:Defect Qty:qk]' palette='red_black_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[pcto:sum:Defect Qty:qk:1]' />
              <color column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[pcto:sum:Defect Qty:qk]' />
              <text column='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F2C92810-C7CC-4151-918B-3F1FF2BA4B45}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Defect Analysis (as required)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Defect Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
      </datasources>
      <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
        <column datatype='string' name='[Material Type]' role='dimension' type='nominal' />
        <column-instance column='[Material Type]' derivation='None' name='[none:Material Type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='16' param='vert' type-v2='layout-flow' w='99064' x='468' y='915'>
            <zone h='4691' id='17' type-v2='title' w='99064' x='468' y='915'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93479' id='14' param='vert' type-v2='layout-flow' w='99064' x='468' y='5606'>
              <zone h='93479' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='5606'>
                <zone h='93479' id='5' type-v2='layout-basic' w='89702' x='468' y='5606'>
                  <zone h='46738' id='3' name='Monthly Defect Trends by Material' w='23044' x='468' y='5606'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46741' id='9' name='Defect Quantity Distribution by Category' w='24557' x='468' y='52344'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46741' id='10' name='Material Usage and Defect Analysis' w='33027' x='57143' y='52344'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46738' id='11' name='Monthly Defect Trends by Material (Detailed)' w='66658' x='23512' y='5606'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46741' id='24' name='Total Defect Quantities' w='32118' x='25025' y='52344'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='93479' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='5606'>
                  <zone h='9839' id='8' name='Monthly Defect Trends by Material' pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' type-v2='color' w='9362' x='90170' y='5606'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='53661' id='12' name='Monthly Defect Trends by Material (Detailed)' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]' type-v2='filter' w='9362' x='90170' y='15445'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Defect Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98170' id='37' param='vert' type-v2='layout-flow' w='99064' x='468' y='915'>
                <zone h='4691' id='17' type-v2='title' w='99064' x='468' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46738' id='3' is-fixed='true' name='Monthly Defect Trends by Material' w='23044' x='468' y='5606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9839' id='8' name='Monthly Defect Trends by Material' pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' type-v2='color' w='9362' x='90170' y='5606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='53661' id='12' mode='checkdropdown' name='Monthly Defect Trends by Material (Detailed)' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]' type-v2='filter' w='9362' x='90170' y='15445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46738' id='11' is-fixed='true' name='Monthly Defect Trends by Material (Detailed)' w='66658' x='23512' y='5606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46741' id='9' is-fixed='true' name='Defect Quantity Distribution by Category' w='24557' x='468' y='52344'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46741' id='24' is-fixed='true' name='Total Defect Quantities' w='32118' x='25025' y='52344'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46741' id='10' is-fixed='true' name='Material Usage and Defect Analysis' w='33027' x='57143' y='52344'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{16856008-17AB-4D3A-AB87-70EDE804EDB4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Insights &amp; Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e9f0f1' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='clean+ (final)' name='federated.0wt7ncr08bpmpe1d7rx0619d5vnw' />
      </datasources>
      <datasource-dependencies datasource='federated.0wt7ncr08bpmpe1d7rx0619d5vnw'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='34' param='vert' type-v2='layout-flow' w='99064' x='468' y='915'>
            <zone h='4691' id='35' type-v2='title' w='99064' x='468' y='915'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93479' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='5606'>
              <zone h='93479' id='5' type-v2='layout-basic' w='89702' x='468' y='5606'>
                <zone h='46739' id='3' name='Top Defects by Vendor' w='41913' x='468' y='5606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46740' id='9' name='Vendor Benchmarking (Defect Rate by Vendor)' w='41913' x='468' y='52345'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='64608' id='13' name=' Downtime Analysis (Total Downtime by Vendor)' w='23893' x='42381' y='34477'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='28871' id='16' name='Defect Type Breakdown by Material' w='47789' x='42381' y='5606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='64608' id='20' name='Defects By Plant Location' w='23896' x='66274' y='34477'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='93479' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='5606'>
                <zone h='7894' id='14' name=' Downtime Analysis (Total Downtime by Vendor)' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='5606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9839' id='8' name='Top Defects by Vendor' pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' type-v2='color' w='9362' x='90170' y='13500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7437' id='10' name='Vendor Benchmarking (Defect Rate by Vendor)' pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' type-v2='color' w='9362' x='90170' y='23339'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7437' id='15' name=' Downtime Analysis (Total Downtime by Vendor)' pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]' type-v2='color' w='9362' x='90170' y='30776'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='16704' id='17' name='Defect Type Breakdown by Material' pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' type-v2='size' w='9362' x='90170' y='38213'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98170' id='40' param='vert' type-v2='layout-flow' w='99064' x='468' y='915'>
                <zone h='4691' id='35' type-v2='title' w='99064' x='468' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46739' id='3' is-fixed='true' name='Top Defects by Vendor' w='41913' x='468' y='5606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9839' id='8' name='Top Defects by Vendor' pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' type-v2='color' w='9362' x='90170' y='13500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='223' h='28871' id='16' is-fixed='true' name='Defect Type Breakdown by Material' w='47789' x='42381' y='5606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16704' id='17' name='Defect Type Breakdown by Material' pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' type-v2='size' w='9362' x='90170' y='38213'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7894' id='14' name=' Downtime Analysis (Total Downtime by Vendor)' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='5606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='64608' id='13' is-fixed='true' name=' Downtime Analysis (Total Downtime by Vendor)' w='23893' x='42381' y='34477'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7437' id='15' name=' Downtime Analysis (Total Downtime by Vendor)' pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]' type-v2='color' w='9362' x='90170' y='30776'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='64608' id='20' is-fixed='true' name='Defects By Plant Location' w='23896' x='66274' y='34477'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46740' id='9' is-fixed='true' name='Vendor Benchmarking (Defect Rate by Vendor)' w='41913' x='468' y='52345'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7437' id='10' name='Vendor Benchmarking (Defect Rate by Vendor)' pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' type-v2='color' w='9362' x='90170' y='23339'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{545A766E-24EC-4342-86C1-F22FBCA75FBA}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Top Defects by Vendor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect:nk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B68BBC5C-8987-4897-A506-7E9E30040B2F}' />
    </window>
    <window class='worksheet' name='Vendor Benchmarking (Defect Rate by Vendor)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CEEC96D-8398-451B-99E9-461BD4EA37E5}' />
    </window>
    <window class='worksheet' name=' Downtime Analysis (Total Downtime by Vendor)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Downtime min:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Vendor:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10A2CADC-CC1D-4EC0-9FBB-5A2E14F2CBE2}' />
    </window>
    <window class='worksheet' name='Defect Type Breakdown by Material'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66B731CC-9D7E-487D-8275-AC0EF1902E71}' />
    </window>
    <window class='worksheet' name='Monthly Defect Trends by Material'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5376DA90-D3B6-4052-9276-9105E3E28E5F}' />
    </window>
    <window class='worksheet' name='Defect Quantity Distribution by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FA41E34-FA41-45CF-89A3-D49C4903B3B9}' />
    </window>
    <window class='worksheet' name='Material Usage and Defect Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1170D3A3-C1CF-486E-952A-EE3339373750}' />
    </window>
    <window class='worksheet' name='Monthly Defect Trends by Material (Detailed)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Material Type:nk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{23EFAB2D-E645-4581-BF8F-0A4FF84F6BE2}' />
    </window>
    <window class='worksheet' name='Defects By Plant Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Plant:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3AD68A77-8A58-4FB8-9EF3-D3C5D62E3F26}' />
    </window>
    <window class='worksheet' name='Total Defect Quantities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[sum:Defect Qty:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect ID:ok]</field>
            <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Qty (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24C37601-D520-46DC-9A86-B2D9859C1DB3}' />
    </window>
    <window class='dashboard' maximized='true' name='Defect Analysis (as required)'>
      <viewpoints>
        <viewpoint name='Defect Quantity Distribution by Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Material Usage and Defect Analysis' />
        <viewpoint name='Monthly Defect Trends by Material'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Monthly Defect Trends by Material (Detailed)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Defect Quantities'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{471E0807-9FFC-46BA-B0E7-09769E301FC6}' />
    </window>
    <window class='dashboard' name='Insights &amp; Trends'>
      <viewpoints>
        <viewpoint name=' Downtime Analysis (Total Downtime by Vendor)' />
        <viewpoint name='Defect Type Breakdown by Material' />
        <viewpoint name='Defects By Plant Location' />
        <viewpoint name='Top Defects by Vendor'>
          <highlight>
            <color-one-way>
              <field>[federated.0wt7ncr08bpmpe1d7rx0619d5vnw].[none:Defect Type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Vendor Benchmarking (Defect Rate by Vendor)' />
      </viewpoints>
      <active id='35' />
      <simple-id uuid='{18A59507-9819-497C-AE5C-3A41E62F013F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Downtime Analysis (Total Downtime by Vendor)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Defect Analysis (as required)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Defect Quantity Distribution by Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Defect Type Breakdown by Material' width='192'>
      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
      liYCIFja/wfulFdmHKXoewAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Defects By Plant Location' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Insights &amp; Trends' width='192'>
      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
      dkYm/iUDd4wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Material Usage and Defect Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly Defect Trends by Material' width='124'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Monthly Defect Trends by Material (Detailed)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Defects by Vendor' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9149ceZbn97n+hveR3juSSVtVLFabmu2Z6enZ2XHQSNCshJWEFSDoUXoR
      BEFv+g8EPQh6ECBBgABBs9PTszOzrW2HrurqMiwWyaJN7214dyOu10NmsYtVSRZNRmZkVn5e
      mIzMOPG798b5mfP9/c4RfN/3OeOMbynicTfgjDOOkzMHOONbzZkDnPGt5swBzvhWc+YAZ3yr
      OXOAM77VnDnAGd9qzhzgjG81Zw5wxreaMwc441vNqXIAx3Haat+27RNr3/M8XNc9s/8V5EO3
      eIzMrOb54MFG2+x7rocota/PaKd93/fBB0EU2mbf90E8Yfbb6AA++fVFlnJNpqfPE1QlAByz
      ScP2wbWJxWJPv8VpUGhIpGI6jmli+j4hXX/hT1zbrfKPH84d2hU4jW0apk4sGae2M48aH0LT
      FABcy8DxBDQ9AHYV0w+jqadqQH0Ku1FBDMWQvvSaaVRR9cjTTuXbGHWDYCT2NRudSPscwKrx
      eL3G1fPDuK5DrVSihUrIM9iquzjVXZqZXlLZLK1KAROVlFZheUsnrNhsrmxCMgHbW/R2d1Gt
      VAlEk2iiQ6FYJZJI4hpVTFTSySjt6HfsUoVya5No4hK55bukJ3vAKuP4Kopbx7BlJN+iufsA
      M/YWnlEEJUwgFG5Da46XVmETLRRD9GyM8i6SnqBZ2sJSq2jRLJJg06zXCUZDVHLbqIpAs9Ek
      lMwiCu0ZFQ6D9jmAEmYopfDp3QdcujDIg5ldwjRIDk0A0KiWUTyD3bJFs7aDIri4vSnwBB7e
      X0GRZPR4gmqpSKucAz1AY9cg6OQQQypr60XyW7N0jV8h1SYHAIFgUKG2vYCSGgMrx85GDhUD
      LT0CIuSW7qFKLTytwtrceyTGv38qHeALPMdg694vaUrd9A11YxkOtVIRrzZHYTdH5vyPEIDi
      wofU7TiBRKajHaB9Y7Zr4alhBjNRypUqgqyjKSLu/umDWLqHqYlBPMtBVFRURcLzffA9XEEi
      qKtPvtRiMMbU5BhhRcb1BUJBFd9XuTB9nvLGMkb71l7o0Sy5zW3isQDgIUg6sizh+QA+IKJo
      OoISIjN0jtr2Ml77mnNs+G6Len4do7xNsPcNIkEVX5CQ1QAIIGpJBq/+iHhiz/kjPedRvRz1
      RnsDB69L+0YASSWkSdTFFP19PcTDGxh+N72pCKbrg5cATWJyUqJV2cHwdboyYSIJEb+lU6jZ
      ZFNxuiJBJElEEDQGB7vYmFnhNx/Mc+n6j9A1g6nLVwhJ39ycV0HLDKCqCn2Tb6DoCr6goqib
      WF43kVgUzxMIaiKtlk0somA6IbJjw6crtLZPINNHtVRESvYRcneJdV1BUwVqhRypwXNIXoNq
      sYCsR0n1RsCuEeq5TDSkHnfTn4tw0k6EuY6D6/koiozwlaF1caPA/eV8+z7bdZGkNnlbm+3v
      RVF8RLF9UaaTaP/EOcDzsG0bRVHaZt+yLFS1fT1aO+27rovv+8hyewZ9z/PwPO/E2T9VOsDc
      epEPH766DnClWyLynO+f53lt6+HaYT8+t4BabwAnN07/tP3DHwGO3QHMRpH79+eIdA8zlFBw
      gglC8qvdxNWdCn//wewrt0W5INETOdwbXNhc4O7cJoMT04z3Jg/V9jfh/+rXBHPtmxKeBo59
      vVZv1unum4TKCktzixSaDi3TxrEtbMemsLtDzTB48PHHrBTKtIwaO7s5bGfv72yzhdvBs7ha
      scmlt99kZ3kB02qysbVFo9nk4/c/YDVf4OHND7i/nsexWmxt7WA6LmazSaFcZWlpHsex2dnZ
      xjAdGtUS27nik0jaGa/PsY8AuBZzj+8j6xL9MQ3MMg82DPrCLcymy4d3F3n7e2/TqNXw6wZS
      fov3bn7O1Fv/nKC9jStHODc1RpuEgNem1chz6/1tUskezPI2//gP/57U2BtEm1WCtQbNWhUz
      VOfuwk0+eLjK5LV3UMsFus5doFUo4la3+bcfPqR3fJpUcwcvNcoPUkmkDr3ek8axjwBIKuPn
      prnxzg0iqgiChFkvs7W1i6+nuDzVy/rKNl09KUKBAIWqxY13rmBWDSRJxHHaKAIcAqoe5eL0
      BbRWg/ntIt/5/vcIChL9PRki4Qh9/d1EQ2E8OcgP/uAPuTiaJd0/woWhbgAcV+K77/6At8+P
      cf7SJbz6FoV6Z1/zSeLYR4BoLEskqqDIEtGBcUJaCL2nRpMuupIRNs0I00N9hCWLjYLB6PgY
      +brF9EQUSe9Dcq19UaozSff3sLRZZPDcObJBn/n1HG9dGSIkW6wXDXoHxqhslDh37Rrzyxvo
      epTRkQSCAJOT5wjoCgsLy2h6EEWwGJ64TDbSvlDst41TFQZdWM/z+WLuld8/mRYJqc+eW5w0
      HSC6soZsNIGTG6dvt/1T5QBnOsCzOdMBDubYp0CHyfxGkY8fbbXNvut5SG3UAdpp3/d9fHxE
      4Wjs3+gXkQ5RE9g7z+AjnFQdoFUv8nhuheGpi8SDL95Ll0pFEokXi5+vbFf48fuPn/s3tlFF
      CkafWv1bRg0lEH56a4Vn0zRaBMKRF27rcdAqLVPY3iKcPU8sFcduFBEDSdp4bueFyLwpo76i
      nnOUHNFt8nlw/xFDYyPM3L2D0TLxfB/TNHGsFvl8AdOyuH3rJsVKHavVoFAs43o+y0tLtIwa
      +UIJx/Np1MrkCyU836NeKVGtN3mZOVwrv4EL+J5Ds7KLZZrUCxs0Kzls28GzDYxKEc9rUt7d
      wTXre//v0JmiXa2TGLlMOKZT3drAyC1guQ5mrUirXqVZLbT1qOJJ54hGABslkCQRjZONKDy4
      94gLb15g7v4sEnXQgiytiTRKJcrVMvfu3WQlZ3Djh38CwNbCfd6/tcD1H/4Jhdmb6JJGdXKK
      z371C2w5yp/9B39J5CWn/p5VZf32T7G0Abp7EjRKW1i7u/i1GQq5PF3TfwxAfvZ96k6CoSs3
      aJPK/1q4VpHdRzukhi5i1iroKmDtsLWwie+VCIYTyPF+Utme425qR3JEI4CC0yqyub3Jds0l
      pnjs7uxQbrRwfYFUKokgyKTTKWJhHSmY5t3f+y6ZaBBwKRkib12exDKbZHqHuTDWR8t26Bm5
      wHduXEV5iS+m55oY5V2Mao5w/1uEVBFfVAhEUgiCj6DEGLzyQ6LRvaOYkd4L6H6eRrMzd/lL
      WoaBa39IPPn0EcRI7zniXQOk+ido47LlxHNEI4DAxcuXWV7dIJZKMjKYZmlthwvTE8R0WNnI
      MT09hVvPkzM8rl6ZYj1XRVNlxsbP4Zt1Cg2Xga40opdAk2BU1inh0PQVlJeIHOqpDJXCNuHM
      ELq5RWTsMprqU8ntkhqcQnR6qORzSMk+kj1RsMpo2Wkiwc78FgWyg/u9mEK8bxBJdBFUDUmR
      EbxBREUlLAeOuZWdy6kKg86v5bmzsNs2+67nIolt1AHaaP+oo0BXe8RD3a7Rrt2mp8oBznSA
      Z3OmAxzMqdIBFjZL3Hx8pgMcxF4PTdsOqLfbvibB1W7h5OoAALX8JvPreQZGx0lFg4e+gXN5
      q8zf/PrRIVvtfOrbj6hWDBID0wSCOma9hBra2090WohqkLh6+KP7ka7sNnNlxkYGmP/8c1qu
      S61SxmhZ2JZJpVyi2Wpx/7PPyFfrOLZJqVTG8XyslkGpUmV3ZY1yaZPPHs5TN1o4rodrW7id
      vBvuCDCbFsmBSVTNpbqdo7o9j+damPUSZrNOq1bhFM10D5WjnQKJMuFInPG0zsLqAvd+8wlK
      vJ/J/gC+KGH5IRq7OaRkF9uFVVxFx11TcY0aoUQKt9YgLens7hRIh2WarobULNA3Nc23Oc5h
      VdepVStkJyYwqiaSCGZ5kcJOHbtVIKCohCe/T0Rv3/ropHK0sT3XplTMMZdvkRBthi+8wfXL
      E0ihOJcuXyCih+jrzZJMxHA8ga6uLjzLQFCCdGVSSAJEEhnS6RSZrl6s8hJNIULgW346RE+M
      MnTl9wgGtSevCbJKYvAysewgmb4BvM6UMY6dIx0B+rrTLG8VmLpyhURQxrYX8GWFwXQfAhr9
      /RlEN8Bmucq581Msre0yfeVNnNoum8UKvWOj6IEQPZES1VqDZs1i4sLAUV5CRxLOfHEPIiT6
      dAQSSKqCL8io8gCiJBBs4zbuk8yJDYP6nkvLstE17ckmtrm1HJ/N7bTtM13XQ2rjLrN22m9/
      1gb29+u3x74qwaWscHYe4Hmc6QDP5kwHOJhTpQMsbpW4NdvOEeDwT4Rd7xWfbLI70ToA+yNM
      2+zvjzCHbL8DHMBjY3GOUktgbGKMwAts7HGbdUwlRPAr+82XNsv8P7980IY2+tS2Z7CFKIls
      z9dSMr4OiesyciduM30NXKvBvYfz9AxP0BUPHndznksH7PByKdVsupMKj+bWcGyTSrWG5/u0
      jDq1RhPbalGp1nH3NYHc8hz5lkezUaPRNF/qPMCr0MrNYrhBNF3Hs1u06hU8z8dzLCyjRm7x
      M1pNA88xaTWqeJ6PY9ZpNWrfvvi773H39n3SPb3Igke9WqFSN/A8F7NlUNze5NaDGZqWg1Gv
      UW00cR2bWq1KzWhx1LerA0YAMKpF1t0meryfW+//lLnNMuevvotV2yaR6aKW20GSBALdA1SW
      l5DsJtHYLv/uvV9gyTH+9C///KXPA7wM9bpFenACSRKprX3K8sNbZC7+JX7hIWKkGyO/DoEU
      fmUDFwEpMoi5cxsBjdiF3yeid8RtPhp8E1dL0NeVQcDhZz/5G+7kRP7zv/getz97RHc6ztJu
      kUQ0yPL8IoIIXZE463YTWvAH777DUR4k64gnE4wm8d0msWiIshjkO9+7jCpAQUzRnYpSKVQY
      7I6wY9WRtAQ9CZ2KbZIZPMdAb5p2yzvhsEp+a51wJIzRtOm7cA2jXiMQGyA5OE6BJuFYgnJ5
      l2gmTa1hEUqPEQnKNL9lAwCChmSWWN/JERTqCIlJLkh5Wp7A5PQVBpMKlrpBVINQLEtErmE2
      ZS5dvUZ1aaHto/lX6QAHkBgeHSEU1imValy5eoXFtRyZ8Qm0/Dr5qsOFyT7WdmpMjU9S0Zcp
      GwFGegeIuRaGJyG3OcStZyaxt2YwWzLxrkFq9Sbpvh5ECRAEoqleatUa6aERirs5Uv2T+Lax
      N2p92+LvgsiVaxe593AedXic4Uwdt/8C2UQS3xORNYm0LuCoKXrjTerCABfGoviKQqRv4Mgz
      3p2qMOjMao5bs9tts9+WKFCf+CSycVYf4OjtnyoHONMBns2ZDnAwHTAFOjyWtsrcnj9Tgg/i
      RZXgN3qkV0qp0qkjQPLRLMJzsmKcKgdY3Czxf//8/rG2wTEKlHZ3ifdPocgdEGV+ScJvyaiH
      MBH3XZuFuVnkeC/D3YlDaNmrIfybv0eyn12o79iekNUyaBgtPM+laTRoNE3M7UfcW6vhuC5G
      vY5pOWyvzbCyWcZxHeq1GpbjYlsm9XqdZtPAaFnHdQlfx7fZXZolGE/iOTaWUcWxbTzXwbWb
      NLceUCyV8TwXu1nDsZ09LaFZ6/gs1y/L6uwDmmocXfYxmwbVWgPP9588u1t37tBoWdhmk2rd
      wPM8mkZjL8/TEU7Kj2cEcOt8/NtbqLJLdGCU/No6vicxkG6xUnKIGLBRsbAcn7RcpmiZRLQE
      v/rZ+4QGpumSK5g2tJARUfnu99/qjKHMKyKFRgjFu3BbJRY/+XtsfZj+viTVRgvFLFBXLGRD
      2xP7PIGo6tLwZUQxRO/4heO+gkMj1xR443wfIh53Pvg5v3qwzp//5V+w8MknZAYGmJ9fIJzO
      sjPzCCSIdk+wu/EIHJm3/uAPSR7R0YXj+d54FnIozWC0wYYtMXbuIm5xm2RWIq8nEVqrdA8N
      s7u8SFffEEEniVHaYOLqdbZ3coTSWSbTGQqui1MsdU5dXjGJ27hFs6ZgN/byDjVLu3iCSmb8
      AlJlDsHLgrFKODuKkVtCVONkh85TWztdRznTmsfM2i5p3aMuxPjOJZVGrUnP8DkuXxrFdZr0
      p4PsLEaZ7FdZqHqMTV0kbFZwjvCBHo8DKEnG+koUWlEuD2RwkfADfahhnejWLMnRc2wtzTM0
      NkUyIpGfXaNrbJDy4haXp88T0mQ0TSPt+/iBQGf0/gCCQmZ4lOLWBvH+USxjgdDoJQJBHUkS
      ERPDCCvz6H3nqG/OEO2eQldFJCCS7j/u1h8qg+cuMvPwAZXUACM9cYp2lqHuNF+czBnIJtgs
      OExPZFnKW7x1vhfbc5HdCMIRPtBTFQZ9vLLLzZn26QCe6yK2Udhqp/0Xza78dp/4aikg93eb
      HuZGwcOwn3rwGPE5UaBT5QBnOsCzOdMBDqZjZg+Hwcp2pb2Z4U5YhZgvcxhx+mRAYCRxcA/8
      IvbVao3w+uYrffaprRP8BabRQNRDKK9xffMbRf6vf//54TXqEHCaRcq5HLHeiROpC3yZiZTA
      P+uqMruyy9jkBCH15Zw1srJG728/aVPrXo2OeSKl7TUajofZamE0TTzPxTAMLNvm8aMHGC0L
      13UwWybrGxu4rkvLMDAt57ib/mx8h93Fx+jhCJ5jY7caOI6D77m4tklr5zGlSg3P83DMBq7j
      4Lk2tml0aE5/h1t3HpFMRrEsG6NRp2U5eK6LZZkUl2d4tFPGcfdi+qbl4Do2htHAtDvxejpo
      BNijxK9/dg9UmD6f4cObi7x54zoriwu4agxzewYhNoTr1NDkFjOPdvBEkbe//w56x7jyl/AK
      SKFRwsnuPV3go7/HCYzQ15ugUjf2dAG5jpQIUi5X8JGIqg51T0SUovR1mi7glFBjo/T39mAZ
      ZX78tz+mGhziR9MZZnM1Is0Sa3IZrS/C/FYRB5nRoMuaIyJLEf6iK/bNn3HEdNzXZnDiIueH
      ewnEe7gw1U++WKdvYIDhvgzBRA9Xp8eQAESZgZEJ4gGxcyuniwncxgpmo0yjvEu4/y000cET
      VLITb5EeGCXWPQ6ORaR3EkUGUYnTNfUOutaBxyTlOK3yMqVKie3dbfqnrpOWPWxB5c3r17ky
      Pc74+ASSbTM4PkVUE5DVODe+8x0y4Y77qgEd5ADxbC9BOUxvb4RUbw+6JGLbPmOjgwz2ZFjd
      zNPX3w+CwPDwMKLvsro4T3rkPKFO3XIvqGSGhiltLqPF+5AxSY1cJJjqRZFE5PgwfnUVvfsc
      XmmFcHaSYLYfGQin+o679Qeg8MblMR7PLBFJ9xMUTS5fu0R3Ty9hRSLQNYSfXyU+MoWTW6V3
      aILe4QECwEB/Z+ocJzYM6roOID61e/LR8k5bq0R6nte23Y7ttv/FY36dOH06JDCZOrh9L6Iz
      6KUykZW1V/vw/SjQYWeHPrEOcBBnOsCzOdMBDqbDFsGvx+pO5bUqxX8TJ14HoM31AY7wPMDl
      bhHpEK7llR2gnNtkp1gj3TtIKvJquZkNwyAQCDxnWHap1VpEIqEXsje3XuT/+OndV2pLJ+Oa
      BqiBpx6455r4noz0lTxKplFDC3Z2bePD4L96U0Y7hPQRr+yuu1u7hGMx5mZm8FyHVsvcy4dj
      W7RME9sysR2HzYXH5BoWvuditlq4no/r2LRMi9W11b1awa6H6zhP/d40LXzfZH527Xf2/f33
      tlq4rreXm8dzO7aG72Fh5zcwPRfwce0WjmNjNXM0SuX9qY2HY7XwPI/ixjy+5+7//3Tfl8Pg
      lUcAyyizPlslluxld/kBv/jtXc698yPMjbvYpguJDJKgIBZWsCowKBf58P4SQ1NX0MwyYiiO
      aNW5e+cmQqgfub6KI4IS7KNV2cL1YPjCJOBy/9bHNGyPSM8orc1ZzGaJ4PANQoqM1MzRMzFN
      8FRN5p6Fy8atv6PY0Jh48wrltQXKWyqhqMDm7AOiI99HFaC2/hmbazkGrv4+odC3uXLCN/PK
      I4AezXL97bfwjQo7VZO3r53HMBoke4a4fmGMkem3yEZ0hsZGmRwbpt6wuHr9OwxlQ6AnOT8x
      ihZJcP3Gm0QViWCim7dvXEd36kjhDOODXTRbJuBiejrTUyOYrQZiIMXkYDd6LEurvIThBb+W
      IvH04eNaLdxWDiF6nmg4gINErH+agC5iNJp0X/g94qkkAHpyiGQ2iVEtHXO7O59XdoBYROXh
      3ft0j0ww2t9L0w8xNdRNb08varKHlAbdvb2kunvZXltl6spVrEoRKZBmoj/M7OIq2e4eBFR6
      e1P09vYAKn1jE4xmVHYNkZHeXoZGhpie6mN+vcz58TG82iq/uLlIQHZwGyY9Y8OHdzc6FCUR
      p7p4l0pNJBRwiPWfJxiI0yotoHWdo2/yDZxGEUFSiHcPIQjgeDLRZOa4m97xnLgwaKWYw/IV
      kvEQtUaLWCT8ZBH9cGmHDx++2m7DF8HzXMQ21glup/29x+wjtLFO8FHaf2dA5DD2Fp44B3ge
      ZzrAsznTAQ7mVC0d13ar3F/Ot83+SdYB9iJCbYzTe/uV4jssL9A30RYHqBS2yZUMsn39yK6F
      Fg7zYo/VxTBsgkH9lT53dq3A//6Pt1/pvWc8je86ewU7JAHbdlG1g5+J57TwUZFO6FmHtrR6
      fXOTgC7x8MEMazOztHwP27JwPW8vJ45tf+nnvf3kc7OzuG6LleUtbNvB930cx8ZxXTzPw/f9
      /WHQxbJs/H1NwHHdI88o/G3AbdVpVAv4VoVybmsvt5Gzd999z93TX1yHVnUNo2HtPx93v6f2
      cB0Lb1+j8Fxn71/HwuuwcpVtGQF816FhNPcOeHs2bm2XH//TLwn3TDEZMdm0QNNj+IUl5rca
      XLwyzdLcLGoswsbiI9YX55n+zgXm782DKJPRgqSvX2Hj7m0Uq8J8Ab73zkV++4ufYyoJ/sWf
      /QmhUzWZ6wQc8vMfUhQk5NQFCjO/ZHN5jeF3/oLK2m1CqQlapSVsu0W8y6Noxqmt3SczMo7j
      SuQe/hpTzjAylmVr2yCZDrP+8DO07DSTV68f98U9oS1fG0HaK4g9MJxm9d7n5LfznH/zOpur
      W6jBLG++cY71R5+x7gb53nfPE0n3ILo2fekIrfGLpIUm+VaTrqEpxNoq9bqLaTSoNUymJyZx
      mGV1q0S0e5zB/jTi2RDQBmTS498hElLI52s4pkZ3f5pWyyPcc4FYOETBHyCmWfj6AI2Vj4hn
      sxQ2dkn3JQn0vwGlVXxBITvxDn7uY+KjNwhFOmubRlscoH9wjGg0hiBA9/AQgbDC5/cXOHdu
      ilRYRwO6e8foSpaZXSuS7B4gFpTZLJh096TQcQhFgqw/foAfH+LKVIDb9+boHx4F36Qlp7k6
      NcbG3ENqTY/BTj0PcIIR1SABWUWQRaIJDVs0aFlpwvEoougjaTq6sE7DUEgmNMTucbRkL4K2
      RTCepZ6/i94/jRYN4ysiUv9VWgt38Dm+PKEHcarCoA8Wt/ngwUbb7J/48wA+CG2rE3wy7Z8q
      BzjTAZ7NmQ5wMKdq6bieq/JwpdA2+68Sp9dkgcnUi/Va7c8L1M5K8UdfHyC8voliNF/L7jE7
      gE9hZwPD1ejrST85rGE2m8i6/tT+92azSSDwu52NnmNhuj6u4xAO7Z0XmFkt8L/95GPq+Q2k
      YJpgOPxyzfFMLFtE8E1kLcxhnB1JBuA/vdz+VMdmo8LKVpGBoSECL5lcqd5ooKsKpuMRCrya
      BnMc9P/yPUI7r3cA6njVC2OLB8tV7FoVc9/Dfd9nd3UVw93b5+/7Pq7rsrKy8kQL2NreolUp
      srKVY2Zm9imTtY2HNM29vDu+7/0uNr0fu/atEqV87km82ve8/d95+HaOwk6J0voj4MtxbX/v
      757YO57b9Ux8l09vfY4o+jRNB9d1cfe1ky9+Lm3NsVlzn9zDL37n+T6P5+ZolEosrG/ie96T
      6dIX044vbJxGjncE0FPo5iw79QyhnWV2vSSt7UUIiizf/BhfjDAYc1nNGYh6lOaHv8TW+xDE
      JtH+ngNNtiyBzNgYgtdi88F72LZLbOg85dlbuK5MarSLrYV1GLtMdXeOUGIIo7SK50tkh4eA
      vTl4feM2yw/vEhm8TsDdxlW68RpLmMQZvPQuSidNHp08anyc8dEeavlVfvr+Y0Q1yHA2zHKu
      iC/GiJqzrAll3u71ebBjM9EdYn6zgB5OE38ysPr86p/+Xx5uVPnBD/+MtYVP6eub5PPPPmHs
      zd/jOxeGjvMq28LxjgC2zdgb79Aj1Mlbe8putVYHUefyG28QkBwaLXjz7TeJ6iJ6rJvr16ae
      67WKaFOvNbAaJXwtQ/fQKLbZJNJ7md6hMdTEIKnhq0SjYSK9F4nFI2jJMZJdKZwvVZsx6xXS
      U98jnkohh3vombhAYuASgYCA1TLbf29eBjlOs7xK0zQolMoMnn+TwZhA0w/y3Xd/j5FMgIlz
      l3j7zcsEtCA3vvddZNPk2jvfJeC2vlRfwaXuaPzw979PRBYYO3eN6clBrl9/k1qpfXusjpPj
      7cdkhc0Hd/FD3Uz3ZLl37x7xgVG60iqPbn/O8LlLRMUG9+4+oG94hLAqgiAwODCIGgrQrfk4
      4adPPMUHp8kt3MZJTpBM6uQLdbpHz+E0TSTBBTWEai9TN0cIReIomoZevU/TjpDtyyI3RQRv
      GFXX2J27ix9O7eXoEQR8pwlSHD3YvkjQKyFoXJse4MOP7/LGW9eoProD6QkmExqqJNLT20tA
      g9k797l0YQRdEUhNX+Tmp58ydP4NArQIBIP0a0F6dJG7S3neuDpEQgIQqJWLDAycO+6rbAun
      Kgx6f2Gb9++vt82+53qIL1lCMaTA9b4Xi+yc9PMAPj7iEdpPzMyj1mqvZfdUOcCZDvBsznSA
      g+mkpdxr88mjDf7m14/bZt/3/fZVQHkN+0NxkXcGnt/zftHNtbGAy7HYl40mfe/99qXtSYkk
      2f/+v+scB2jV89z+7CFNT+TG975P6ICOvF6vEQpFnnmTa4bF4lb5hT6vUdwilPxyJMmiXqwR
      Tqae+juzvoMnxAmEtBe8khfHLi2zvjxPIDlOKpPCN8u4oV4CL5l3X7YEatHDfWS76F4AACAA
      SURBVJSbm1v757SftJb1zQr9vemn/q5W3sHwY3Qljkc/UGp17OWVl36f1zCADhoB9HCad25c
      4f5ikUYlTzAVp5CvI3p1FpfX6Ju6ilXOoysid+/cpXfiMsb2PKae5fxI70v3PGa9TCjZQ7Ow
      QG5zm+5z16iuP6CSi9E1fona6mc4WjdB1cCVgjQ2PsUPD5Pu7eOwOjnHsOm6/AMCokR9ewXR
      K+OoKcydRRoNG0W20NLnicWjh/SJL06pVKK3t4fC5iKfPt7gxnffYHnmAfMrEW5cv8rao8+o
      KVn6oy2qfoCd+Vs40UGuTQ0c2v05CjrmGI/v2TyaXWdqapiN9XV832JtdZvc9i6TV69RWF+h
      VCqy/Pgxg5feQmvt8HB+g9XZ+1SfXQj8G7FNA9/OsbuyiRzuJZ2JU1r+gM21HfLL9/cEIK9G
      o24jSQKHe/rGYOPur8htbtCq7acw8UxMRyMW9VGzV7Arr5hM9pBoGA1cK8/Nz9cJxnt4YzTD
      w9vv8969Te7fv4dhu+DW2SyY6LLQeSLhN9AxI8Du0gMeLW5SaZqEFZfffPAxLS/OWFcIXdNR
      ZHBsiEQD3Lv5EQMD/QR0hXAyi/oKXU5l/TbVRouAX0LUwuA6WJU1tsoSyYEhtHwdLdK1N+n0
      FSTRpLi1TCLbe4hXHaTvyu8TlGRys7+T9GUtgKw6oOi4bdx9+jyWZ+6wXDRICxWUYAjRcSkX
      13lvW+T8+WESm3WiyW5kUcDxZAKyzYP5JSZH+l+tyuQx0TFRoOc2QxB4ftciIAjw049m+V//
      /rPX/7znIhzaQu/LKcsPbo/AXujy+R84mRL40fjh9mWdcH9eBKVWZ/Qf/r+Xfp+UydD3v/zP
      neMAh0Gx0qBQa7XNvuM4bQvzvY59XRaIfsMa/Th2ax6FfcHz0MqVl7YnKArq4ODpcoAzHeDZ
      nOkAB9Mxa4DD4ObjTf72/Zm22fc8v2376b9q/6/Oy0giJB7PEV19/YXwadUBvkziX/9rtPGx
      l7J77A5Q2llHjvVgljYJpvsJKs+6Qou11SL9g93PDLNVGyZz68XXbpNd2sGPZVC/NNzarRKe
      F0QLPj3XqOyuEcsOvPZnfpVyt4wiCWibG+gLi4du/5vYrdUIRyIEv/TaeqNOVyCE8uVOwHN4
      WGtxIfaSZy/agN80Xvo9xx4GDQQUlhZnWd2po/kGtz75hFy1ydbyYz66eQ/bbpHPbTG/sk4+
      V8asF7j58U2qhkGhXKNWKmAecplIp1HBwQdc8nMfsrO2jGNV2X38EcVcDs+qsvnwI5rNFkYl
      j9vMs37/Q5rNDtsl+hpUW01MwHEtfrG6xK1Kg3yzzs/XVpg3TKrNGj9ZXafuuaw1m+TqJf52
      ZZ3GCatJcOwOoEeyWIUNhqameHj7JsVahfsP5qnXahjbD3i4WuTz2Q0G+7sA+PzTT6jUyzyY
      2aCw+oD5nQZqu67Cc7BbLXLzt3E8n1j/JfzyEuuPP6RZz7O7sgRAo7AOig7+6Ts0YrsuNcfl
      lxubOIjc6O5luZTn364uU2xWeL9QB2ChWiUoyzgnbEl57A6AIBDJDpLQBOKxCJISpKsrSaFQ
      IBwOYdsOvQODqPu7MGOxGLIaJJMI4KpxFKtM69CLkBts3vs1he1FDMNG0wL4vktx+TYNUyAU
      TiBpEcKJvRQfajCGVVyhVq0edkOOjaZt8JPFRe5UKpQcSEgS+A4/X1+jKSj0BIIE1SCjwb2g
      Q0rTWCnvsmmfLAfoiCjQl5vged7+ll1v/xD33hf/y1LAF3+ztyDy2Ys9Cy+lAzy/PXtHJffa
      4ePv2/c970mZzi//DD6+t1fC87A2y/3Xb+2tATKf3SU5M38oNl8Gz/dxfR9xX6MQBAERnrwm
      AI7vP123bP//7dww+Dyy/+P/gH7p0ku9pyMc4LAolOvkqqdDB+gK733JlIaB3Hz9a/L8vXPA
      UpvOG3SCfaW/DzEYfObvD+JUOcCZDvBsznSAgzn2MOhh8unMFj/+Tft0gE49D/BloqrAj8YP
      7iWDWzuk7z96LfvPZ286elT29YvTxP/6P34ti8fsAC0+ff8mlWaTK+/+EenA12+eZZoomvZC
      t7VSbzGz+nRirFZpByXR9VR9gkZ5l2As8/SXzWtRLdWIptpXV8sur7C+NLe3/z+bwTdLuMGe
      l97//zziOtxIHTwKettbROfmXslurl4jFH5aF9ho1Ml+VRfwHR7VWpyPtl8XkPeLAr6WjUNo
      x2ug8+Z33+bho0WissnDOw+I9U8Sos7yygY9w0N89t5vSE9dZqInzm6hQjosMbdaYPryBSzT
      QfFNtEgSVTrYRexaESnRhWA3yC3cQcucx2vsUNteJNx3CZUquc0dukdHaVQqqGKDwnaZ7nNX
      DqUS+ZdxGhZdl39AUJKpbS4j+mUcJYmdX6FhOCiSjZqcIBrrrAzKAJVmEzkcQXVtfrO1SSyS
      RrQbPCgUGEt3kxEs3s/X+EFPilWjSUZ0+G3R4If9PQQ7eHvosYdBN1aW6BocIb90j9n1Anfv
      3mN1fYORsUF2Cy3GJiaZnhxmceYR0WQWo16lUVnj/myB/MoDFrbrvEgiNM9pYTUbbM9+hueL
      JIemqW/NsfnwfVqleXY399J+1HJrCLJEe/JA7e3/391Yp1X/3f5/oyUQ0kyk+CRmabUdH3xo
      2K5D0bT42cYGNgLXsl0s7esCm40i7+3rAvOVMrIkYHf4EvNYHcCtb/HBrRnmH96hJUaIhAL0
      9/WgBMNEgjqKJCHYVR7MLhOIZ+hOhikUioQScbxGDU+NIVmV5+oATivPxr33Kee3cHwVVVER
      sNiZ/wxPCqCHU6jhXsLRvSN9WiiGsfOYptkOD9jb/5/t63/qVUUPowZCKHr4pbNOHBVN2+Af
      lpe4W61S8yRSsgy+y3tbm090gYQeYWxfF0gHdDbKeTasznaAY40C+b6HbTsAyLKC69oIgoQo
      7sfdfQAP1/ORRBFRFPdK9fggPtEB9vbTP0sH8L29EkyCpOB7DoIgIQjguS6irIDv7f8s75/2
      8vY2pUnyoS94fd+DL2kKewubLz7DB0Twv6wvvDxxHf7VlYPXAJHlVXo/vPlKdl3Pw/I8FFF8
      ogVIAliejyKKCPhPfgbA97F9H+0QtZGvEnznBun/9r95LRunKgyaK9XZrbxetuDn0annAb6M
      LEI29PUvnO95iK0Wev3lN4y9CP5+nL6deY1833vKvhSNoPT1vZbdU+UAZzrAsznTAQ7mVOkA
      t2a3+MkHrxbmexG+HKe/0i0ylnx6qtL16W208qvvB2qnzuCzX2HllNgP//APCX3/e69tt+Mc
      wHNMHt//nJqnc+XyNPoB9WeNZpOArn/tZpdrLR4uv16++Bcl5Yuk/KeH++j8AuTbV6DjWZSb
      NX65ned8pofz4QPy83guTUQCB4QjK60GBhp1s85ELH4ErT0cAm9cPRQ7HecAZrVAxQ9x7fww
      ktPkzuePSPSOkdEdFtc2iHWN4jaLdHelWF9Yxg2lmRzuOVG5aA4V3+V2ocY/HxxCwGe+uMOm
      p3IjHmamVKCMRpdb4B9qCn/dm8FyLURZp1AtIAXipMUmZWR2G3X6dZX38mVudHVjmnV2TFB9
      gx1P5d108kRle3hROi7mpie6GU5IfPTpber1OsVSmVuf3aawvUGkZ5TiziqlUolaNY+rpHDK
      OV4jLdApwANZISCKBNwGD1oKXW6dT2sNqr5CyG6RjER5K9tNxGlwy3AQjTJ2ME6hVqT+5DCR
      z8/XlpmvFHm/UObDnW16wgEeFiv7vz01S8Wn6DgHsJpVNndLSCJUczl8PYKuSsiKTiwaRVP3
      By1RJhGPEdAPP2XhiUKQiWPyd6sr3Dccms0Sd2omMUmkKxAgqkgossZMbpu87TOdSJDQNRYL
      u2zZHl8+gZrUA/SGIowFA/RF4mRUie6gxmeFIs7p/P533hRIDUS5dOUqviChKhLdpoUoyUjS
      Xr6ZyPgE8MViSCCdGv/2Tn8AELja1cek46BKMpORKA4C+hfx+NDeWuk/Gw7txesFAUmN81d6
      BAQRVQQfgXOhPkSg6bqokowY0gCBN7v6udYtvFLysZPAqQqD7hZrbJfaE+eGp+P0cV0g/JWI
      pV4qI9qvPiFrp87geXt5daQ2Kc3ttu97/t6Bm337clcXcjr9De/6Zk6VA5zpAM/mTAc4mI6b
      Ar0Ot+e2+fvfHo0O8CoMxkTe6D24h1QaBl0f3WxbBRfYqxPcvvMM7bevnT9P/D/6Dw/V6hE5
      gM/G4iOWNstMXXmTTOTrC1fPdbBdH0199R68WG1yb3H3wN9t3f8ppq2QnbiO53mEo1+PebuO
      hSipByZfquY3iKZ/J7u7toWkvFxvbaUFRtSDb7laqZJ4ePiHVSzb5B/XVnBEjd/PJjCkMIPa
      152s5broBxXp9h1m6yaTkdAXL9ByvYP/ts1IkcPfJn4kDuAb26zXg3z3u5NYlsvW8iz5psi5
      qWG2lxYptAQujHRRNDyo77DTkDg/2sXMoxnkWDfDKYXZ1QKT56Yoby2wW/GYvjjB9tIslpZi
      tD/7jQthLTpEz+B5PGObfNVGE00K2zkyo+dpbM1g+iq19bsEe66RyKRolfMEYnGKW+skB6dp
      lHbRAiHUYBSrssXy/U9IDr9BPK7v2RmeorrxED/QQzKbPYrb+kLYjsdUpocLkQj16hbzXhDV
      KjPT9PleJsGdnS0kReM3O9u80zPEsC6w03LJKvB5zeTdbIylhkFcFskGNFbKBX68nuMHA0N0
      ixYzTY/vpmJ8tLNNdyzNROjkFNqGI3IAu1YglBll9u4nGGofATPP3MoO0WSUnd0GGU2gaFkY
      lodZyLE6t0Sk91/SlY5TQeDh4zXGRrM8nl/Dq+bpiwWYX1tj5s4jREUjnf1TYt/QGVfWb1Mt
      bJIZvgDA5oNfY9oelu2gByPEsl1g14h191Fe+hC95yrFtRlivQMU1vYys3m1TSqtFq7lEu8e
      JZ7tYfP232HaHq6gYld2iPRl234w8OXw+O3GCg/0CN+Pq3ieyb9ZX6eFQK3ZoC+RYkRXKFsW
      FyJBfrm2yLWeQW7t7vBGMsAHub39/YV6haqpUJN0LifTTOgC/+fcGi0ENN9mtmmTjvoddu3f
      zJHoAGp6lMrMJ9RdAUV0KNZsMqk4ruMSS6SIhgL4+3etVKnRnYlQyW1z894cju2giBZzC2uo
      ukYkniQWCSEqGvFkiqHRUQ4Y0b+GpARQ9RBfRAe1cIpQeoxYKoFV3aBaLCJ4LUo7G8jhLiLR
      GLLkUVxfQFD2erVA1zjVhc8IxHsQ3Rql3DZaOE0oPUY0kSAQ0ChvLHWcZBRUFGKqiggIgkhP
      MMiFeIqxsM5SKc9K08ayDB7XDbrDMfp1BdGz+aRQJaLt9ZHD0Qjv5yqcCwVotWrMGhbdwSDn
      4yn6QiFSosO90snLi3RkUSDHtjAtBy2g49kWri+gqgr4PgKw8OA2ctc4fXENzxeQZAnLtBAl
      BU0WaFkOuq7vbYkVwBNEHLOFh4iuad9YH8Ax63geyFoQ8MF3cWwbWQ3gOya+ICGK4Lo+kiwj
      CHuJoBzLQlID4LtY5TWKZYue0Sl818L1QJLYt6Pj2S0QNeRnlJGfSgv80diz1wAj//SzQ7rb
      v8P3feq2hYdASJZBEPA8l6brE1ZkWo6NKMpIeNi+gCYKyKKI7To0PZ+wLOP6PivFXbaEIN9P
      RrBcB1cQkfFpuj4hWcJwHDRZRmtjQY/D2P//VU5VGHSnWGWz0D4dwHUcpNcIw4VUSB1w8B9A
      cBzU7V0kuU376ffj9O06cdZ2+76PGI2ij4wcqt1T5QBnOsCzOdMBDuZU6QB35rf5h48W2mb/
      6XSIJ8y+v79AbWMC/3bZ/y/++ArD3bFDtwvH4ACbm5v09GZ59GCe89OT7O5sIYohMpm9uHyr
      1UKSJGT56TO5+fV5tgyVi5ODz4wyFCpN7sxtH8FVHB+uVWN3/g5Kcpx0d8/Xf+/YSHL7RsHj
      4K/ePdc220fuAI1CjkbQZmO7Qt/gNrmaj1NcZHs3xMTkBNvryywtr5DuGWVsOMvC4gYjQz18
      +OkDJq9dZ/nxfexAiqHuCJvL67jBBGMDXScq9PY6VDfmiY28jSr5NHbnaDR9UgNj2NU8RrVA
      YX2GzNS76EKDat0h1dNPo7CEaeuk+4ePtIDdSeDIt0NH4zoPHhaZutDN8r01MgMJLE8kHhTJ
      l2qUqnXS2W6Gh/q4/+kHLC/NcGcxT//QEAPZKDtbm3z8208olHdpeiGM/DbOUV/EMWJ7Irqu
      ISsKrcou+eXPqJby7C48IpgaIJodJBRVKG7lCal1dtc2abZsZLuAeehp5E8+R+4AsXCMnXqV
      3kiYxXKdjCoQjSeJRSOI+zJKRPaZX91EC8boHhhmsDtFIBAgKDapuUEykSCOKJNOJQkH9I6L
      u7eTUEhl49HH5DeXaDZtoqlufMchlBlBD0VwmwUaVQPfqVDJF1BUDT2aRgsGT1wR66PgyKNA
      vu/t6QGqjGU5qKqC63qI+/vSPddFEsFo2QQ0BaPZQtODiIKPLEsYjQaIMpqmICDie3s5fQRe
      rk7wScX3PZxWA0HWwbPwEJEVFXwQJQnXMvAEBREH1/FRNH2vwoHvgyifyCnQ//Rf/oBLo9m2
      RIFOVRh0u1BlPV9vm/3X1QGO077v+fi0sY5vG3WAyf4U4YBy5gDfxJkO8GzOdICDOVU6wN35
      Hf7pk3bqAD7CIadGiKgCPxjZU389zzv0Hrr3/Y8QPHdv9wdtrG9wCPbj//KvUYeGDrFR30zH
      O0A+nyedToNrsplv0Nv17Jzw+YrBrZmtr71uV1fZWJgjmJ0k09v/3IdklpZouDESqTiFudtE
      x689qRfsuw6+KCEe8H7PsUBUnhS6tow8nhBFDzy/R08E4GKwfaNW4s4dRPfp8E/dqPCTrRz9
      sRTvpuIHXs8XlBsl5myVt2JBbm5uMtbdQ2p/muN5Hq4goBzwfsd18AXpSe2AmmlgoNKlPfsr
      5/3pv3iVS3wtOt8BCoU9B/BMtnZLhCWTle0yYxOj2LaL4tko4ejTRRq+glNtkb3yz2jM38W2
      U9Q2ZlETI2iqgCSDZYnIoocUiOLZNaqFJrEwVLfWCQxfoL41ixTpw8/dpein6R+dorE9h5oY
      QZVcjFoFWXaQQn00th8jR/qR/SKOpGEWZvH1LmLpTMdoFfWmw7vDI2zsbFNyQiwW80RCCboU
      gaAkkLcgKoGuatiOycOKxaWQxINihXQmw2qhgKxHEWo73HQ1/rKni9VynmgoQVry2Wy2CEke
      ihZlo5RDC0RJCk0KvkihVsBRQlyKhTvifnS8A/i+y/z9W4jRvQPQ1dIuK4uPMYgS9zZpKRku
      nYt+g5UG67d/jqKlibtNarvLGFt5sn3daJpAta6gyhbpoYsgKKiSR72SJxDtwndNarkVGksb
      DE72EdEGMbc+Z2t5GWk7TzKmIiXHEZo7+Fqa2s4K9bV1hs+Ng1sjv7ZCfCTV/upBL4XNv12c
      J6IEuei7zJbLrOTr/DAbIyHBw5ZISnL5TrYbBJGMDAv1Gt3BCJ7nMl8pM7dV5j8ZSDAhRSiV
      d/h3WwV0tc6NsIISTqKYdUw5xGylzFyuzL8azIBv8WGuxKWuwP7xyeO+Dx2YF+gLPLvFzMM7
      1Foi4xffZLRnryZvvlRlYGQQt97AV0IITh37GwWeEL0XbhAO6jRrecRgDwFdJRJRyeVdAkoJ
      X4w9eSDRbJLc6i7BSADbLCMqaULBAHIwSGN3DV/SCWeGSfWPoQRSxDJ7SrTXyEGoBz0U2Ncm
      VMKJOOWtxQ7TKhT+eHCAcV1hu9lAUcP0qwpjAZn3Ky5DSgtL0Pii6M5EbO9gzFBQoeE0QQww
      oivomsJypYItyIzH4ryTThFSg1yMRxAFMFsNXDVMX0DZL4UrMR4J8Hmp0DHiZceOAIKk0Ns/
      wmho/xyoHObSuSCC10vTdtEVFUGSEHyXbzpHrveMgigRHAzhCyJaqI6oBJAVmcGwiyh6+MLe
      XF1PjuOLMsNXEnupuEWR4HgCUdaQVYUepY4SCKMlagiyjixJCECo5woIMlo4jSBre9EKQSAQ
      mCapBDqn8wcyiQQZQWA4o+EKAkkthCophGWRv9Y8NBEcYW9hngynSAgifaMBVEEAUWCgL4gs
      yYRlkT+RLCKqSlfYRBBlQpKIDAwkekAQ6QkEkSSJkCTiI9DQurgqyXTKbqVTFQbdyldYzZ0s
      HUAVoS+65x6u6yId8mHz8Ob23k5N/+nC44fNYdjXJieQogdPZ9sVBj1VDnCmAzybMx3gYDp2
      CvQqfL6ww09vLrXN/tl5gD3+rPiIXrv2FfP7+ftfQifRpqaI/vmfvXZ7XocjcYDizg7hTBa5
      VWTXjtC9n8LBcyw8UUF+wZtmWxaycnDeHoBc2eCTRxuH1exDZefhzzC9KN3n3kJt07HHo+LG
      5j0Srb06CL9anSfnqfxRfz+JA2o5PA+hjaP1i3IkDhCkwuJ2hEB5nfDIORZnH6HGe4h7JYxw
      P63dJVw1TndUZGF1m0TXALpTpmgqDHWFWVhY5f9v78yW4ziyM/zV0tX73g2gsYMAAYIARZAj
      imJI4mhm7ImxbzwxEb7xlf0megP7QfwAdsREOGa0kRpK4AYCJPa9971rX3wBipYsLgCFprj0
      dwd046/MKpzMrDwnzwkk+xHMFsPDg2xtbJIaHMeoHWApCUYG0q/VS+bT8EWGyfTFKG5tkx7J
      IXomiDKt8gGCHMQxOsQGJtAr25iun1RupKtV6U+LSDDGR/EA/1Os80Emih8HBJG1ZhMkGcOy
      mE4mKbfqlF2Z91PxU6+//HN4Jduggb4z6MVVGrZEzNPZ2Vznxhff0GzU0WyT/Z0tbt34go4Q
      xueaOFaNh9sN/O1dNlsiIcXDtKBer7H7aBkxmsZqHPDVjVv87asvaZqvohc/j+b+bXYfLKEE
      BFq1IlrlEXrjgLYZpFPaRJZkOs1DOrU2krZPo/NmBO8/qhzynzt5EorASqtFoVXmUG2xbsvs
      NmqEJImtTpP1tkHEbPLgeTVtfwFejR9AkAkYNexwClWto0T6yUQUHMBUOzhKmFwmQmVvi+2q
      hiT5cPUmpYaG1y6xsl3m+4yJiuKjWsqj2QJ9uRHOz80eKy/QL01saIHxy78nkYqiljapFY5C
      NkKJAULxDKFoCkFwsdQqqmrgk1+fUfJ5TKdz/MvUNAsxP/vNGt89zg00GI4yHA4zHAwhCx4t
      Q2PbsAm/ZmVmXtlL8OTCh7iSD0WEubkYshLE7xNBkhkIKwiygiR4ZPr68IcivH8lhu6IRAIi
      2XgMnz/EUHYeWZaINJr4wzGyqTQ2EsobsKSOD04BIAZT9E1cBMmHT/ETFCSITCGKElFPwYyr
      xAbHUd4EqwbeS6UBUHxBfpsbBEEk6pMZRkQIppFFkbN+kWrb5lw6SUZ5vfr1Vm2DHpQabBW6
      l52sG/v0r0r/qM7u6ZwHmNIrRJwfrztfRl9Kp/BPTR3ruz0/wDHo+QGeTc8P8HTeKj9ArVzi
      cHena/qu5yJ2LX9/d/VPq45vbHObyP5PQ86fVR9ASiZI/du//qxrdpMXGoDnOmw+vEdJk1m4
      MIssCicqg+M6DojSU0tsVqoVUsnUcx6KRSHfpH8gfaxraapK8fDHfgBLa/L5V1+jpMa4enHm
      uWHTaBW+2WpzZXaM/bVlvOQoI+mjvPie5+J6ID1livccGxsJ3/fRY1aTvbrEcDb8k++eBlp1
      j/Wmwvx4H6vLd0kMnyMbPZo5PNfF5entPA285QdIK8cvQiIP9HelHafFCw3AapXJaz4WZsao
      F5e5fV/lg49nQTUwJQVRq9IhxHD2KGWJJUcYG0iwsb5JIJGmsPwdTv8MCxMZtrf3GRibBLXM
      Yc3A0JvUyxWSuREku025VCU7MonbLlLpeIyPJjnYLxEPC+zk64yOj2G1ShyUm/TnhgkoCoKj
      I/jDKNLT/7Et1WJibgGfVmE330DoHGL5U4ykQsihAJVSk2TYD6EwfrXM5l6buekRVh6uMjif
      ZLexR1uIkvZqfL1R4toHV7FqB5hKgoFYgGa7geRotANDSI1dOoSZ7nfYLigoZomKLjM9Ocxp
      ruw7JZWdxiHnRuMsr65xPn4Gt7FP3QkQ0avc3ivy4dVrtArbiNF++sIKzXYd2R9if++AofFJ
      UpF3vLrmY15oAL5ohpF4hW++vcvs+QESCT8Bn8qXtzZ4//0B7h8YZIU9Vu0xjKaJqO+x0soT
      jKbZ2dglE48jpRI8+u4rlg4aZIo1In4/4xPD5OtFlP4IO9t5BL1IdijL5vIKuueSDYls5z3A
      YunBOrmBBMvr27jNCtmgxk4liWxXkIwGE7Nzz+mBxXc3P8cXyvLRtQluLy6zeGDxz79fwN5z
      WSloDKZ8nD8/D8BAf4LC1gq++BgiHtvrK9xaafKnP31CJuNBu8B///kvOL4wVy5MoysRpoMN
      msIArY1V7u+Uif7jr8Ez+W7xLomR2aOZ45R3/wZTATaWV0mMngEtz/2izoC8TzE8SCabQa9s
      UVB9SMUlasEIqhQgJ+V5tNcgMzx+uo15g3nhPGkbGm3dIRrygRREb1UwLIfhibMkohEcvUlD
      c/BJMv0DAySjIUQBGrUquuUQDvupVOoooThT07OcnRhG9EyqtSZCIMrQYB8BWcIfSTCYG0CR
      BTxTo95WH2dKFpCwqdQaSLKMY2rUGi184RS0trCUFMpz95Z9XLryAeOZJK5WRPP1M92fJBJP
      cWf9gEtnAhQbPNFIpjPcu7/F1HgSvBZtK87cUBYxHEZv1dEcGJ04y9UPLhH0hTg/c4aAT8TR
      VTQ5wrmJAQzLASQmz4yR337UFUddOtPPva0CE6kAiD5srUm1bZFIROjUa5iuSKdZpWN6SL4g
      589NkskNkVEM1nafXkbqXeSFu0Ce69Jq1HFEhXgsTKtexR+OIiKhKBKd9hDMiQAACaVJREFU
      Zg0ThXjYj4sAjkOzvM1fb96nb3yeq/Mj1NoGyWiQer1BMJJA9gxauk04FMKvyFiWA3goioxp
      OriWhmpBIh7BMm0kHOptnUQizu0v/ovdismHv/kdG3cXufjRx0Qex6Bsr6/x6P6dH7XfdRwc
      z0PCw3RBa9Xx5CCJWAi1oxMMyOiWRzjoB8fEwIdtqAQUP44HaquOKyjE4pHHfY9jqU1MTyYe
      CSL7fOCYWPjQmjU8SSESDuA4ApbWxPB8pBPRUz395Jgmnk/CUE38fgkPGUNtoLsy6ViYWq1K
      MJpAb9cRlAgRRUT0+fBsg1KtRSKZIuB7uUVZdvEuqRO+Awz+x7+/1LV+SG8b9Bi0Gg067S76
      AWyna/n7u61/WnmB/LUGSqv1k98/Ky+QGAgQvHTpZ10TegZwLHp+gGfT8wM8nbfKD3B/s8if
      v93umv6r9AP8/aTESQbr3I1bCM6zA82Ohrnu5QV6mr5/eproP/yhK9c7LbpmAIbWwfJkbLWG
      L9ZH+IQxII6h0bI8EpHQsf+mUO3wxb3TcYRVNu+QGH8PVy3QaLpkcoOPP3FRqxWCqaM0J1qr
      QjB6PD/FSZjzy//nVzgGsa9v/CT/z/O4mT/kYv8AjtnhbtvhWvr7AhQeu60OQ9EIInCoquRC
      x38GP0Z47Q2ga8OZobaoVw7ZOGgSEE021tZpagbtdgdcg3qtxtrDh+wWyrRabRzLRNUNyvld
      1tZ3sPQO6+uP2Dko4Vga66urlBsqWrPC6uompuNQ3N/moFTvSsYFrbaN2tLoFFZpt9o4eoPq
      3iq2bdMuH+LZOvW9h1Tze1jtItWDTRznzVlNFjp1tlWLrVqZVc1Et3S+LZdpOQ4bjRa2a3Ov
      XOJWrU5T73CrUkVz35z+HZcuZno1Wbxxk/nf/ZG1Oze5s35I7KDFSEIkGfFBahTBUWl2wlT2
      Dpkez7LTdqjvrpMJBciHJxEkhWZ5G9kZYGnpLs5GkZmkRd4Kk4jJ/OWvX+LKIf7wT398YZ3g
      kxKIZTHaZTxXxi+LlHceEEzmKG2vIAGtw4e4ShrRMKhuLWLI/UT7PKTX/mjOEX2hMFWtg+OK
      9Mtws1ikPxLly0KJILBWKWHKIfyizWLxgDwhZhIJXqPkRqdC9xa0ksL7v/47mhv3MQQ/M3ML
      nJ8aYjAb5v5+h5hTY6vQJhZWsPUGq2sbGDYkMwMMZpM4gKWraLpNo1wid/Y8sQBkh8fxqYcc
      NFwGx6a4fPkigS70QlTiePVlxOj40c+A0WkiiEcv2Z7nYGktXNcl2j+J286jtbtXofK0keQA
      qGWk4FG+JRko6/qTXSIPj7ppoLsek4kUttFmR7N+wRZ3h67NAOFEhpAnkEnM4SFQr9UJRqMc
      Plpn4sxZ/OEAc7MySiDE3MULdAyXSDSC6GWQRYERQSQpewhKmETYR6naJDg+hk9wmL74EZlM
      kk42gunJvOSW9nOJ5ybxnDFEJYCbdBCFIbR2i0Asg+dYiBJozTq+YBzRM8hOJQnGuxP70w0u
      JFN48QSSLGO5QRQhwYFm0B8K4TouigRRVSei+PHj8HEuwGC4eztgvxRv1TboXqHO+mG9a/q2
      7SB30Q/wQ/2zafFEi43ozh6C5z7z867XB3jKeQA5k8V/buZU9Ht+gGNgmmZXD5J3I335q9L/
      /jF38/54XhfTr3dJ/63yAwiC0FVHWLcdbd3Ud10Xz/O6duLsTdV/qwygm6Pzm67f7RQrb6r+
      W7UE6tHjpLxVMwAcRa/ajossS0/WjJ7nIYgneKn0PGzHBkQkScSxbQRJRhLAtm1ESUbAA1F8
      ks7wpOOT53lP1vyOYyOIEpIgnIq+53mP2ywhwpP7gediO94P7g14nvCkqs2x9V0X23GQHrfz
      NPVd18FDQBKEo/glQUCWRGzbRhAkRFF48jwEfvB8BeFYs8T3+qJwVJH0rTOA5cWvKTc1Bqav
      QOuQbNxPwQwxM3b8o3l2p8rf7j2k1XG5dGGYpQfbiMEEc8Mh7q4foESyjIZFoiNZ1jeqXL5w
      9sTtLO+u8NVSmU+vjPLdvS2kQJz50Qh31vZRwhlGIxLR0T7W1ypcfu9k+vmNB6we1hmZnMXI
      P6RY79A/dQkzv0K1YzJ67hJm/ZCIaONmJhlJnSzUYX3pFoWmiRLLEXWKFOsqfZMXsfOPqHQM
      RmYuYTXyRCULO3WG0fRxt4dtVm9/Qys0xMJYkhs3b2F5MhcvTLF4bxXBF2JhMs3tlV3kcIrh
      TJD+TIaHm/tcvHD+GIeObFbv/I1WIMfCmQx3Fu++vgUyXhbXH+P6p5+il3epF7a4u1VjaqTv
      RCOoFE7xq4vz9PenMZot5q9dZyQMG3WTjz/+hLjfQmuX+fzGA87PTp589HdUDuouo31xOvUW
      Fz68zkhUYL1u8NFHn5AI2GjtCp9/fZ/Zl9A/LBYQBQGfLGP7Ilz/9DcYxVWE6BCfXF2g1Wqw
      v3qPfTPIcDJ4QnXwBwPYtkMwFMCWI1z/9aeYpXWI5vjk6iXarToHa3fZ1YMnNC6Zmbl5IgEf
      qt5kZPIyC+cGWH1UYuHaNUYzYUqFJpevX2fA76EbTb746lsmzk4jHWuWkZk5f6QvKWEWfrXw
      9hmAbZoYegNXipDoHycbcmmqJzuS5VkNHm4UOT93Dp8soKk6HdMhJNi0DRPb8giEM0yPJShW
      T16PIL+2wmG5wPLyEg3TRVV1VMMhLDh0DAPL9giE00yPpShWfxp7/yL8wTiXfnWJg41VzO/v
      hy+Gpalomo4kyQyemUHWmxgnjl9yqTZMrnxwGbVSwbIe68vRI339SD83MYPPaKC/ZHyUJEpo
      uoraVolEZJptA9008SvQaRuotoPPH+O96UEKLxEP5lo6K4+2kT777LPPXqqFryk+V+PO8h7n
      5meRBY/hkSHKlSbxaOTYp7KMepGVrV0OdouMzEyyu3SH0MAEZ4cz3Fu8TWp4kkTYT3ZknHYp
      TzSReGrWi2cRzeSYmhgllUwzMpJjc+k2gYEJzg6nuX/7NsnBSZKP9Tulwsn1Qz7u3rlPZnSS
      XEzizoMdZubnCdHkwVaZ6bNTyJLE2GCKUtMhFj7ZAXlFMLm7tEb/6BkGoiJ3lnaYnp8nQoul
      jRJnp4/0xwdTFBs28UjgmMoGize/JV8qEk6PYtW2qLtx5mfH2X5wFzmWY2I0x+q9ReKP71G6
      bwi9VSUSiz+32uX/10fxU9zZ6e0C9Xi3eeuWQD16nISeAfR4p+kZQI93mp4B9Hin6RlAj3ea
      ngH0eKfpGUCPd5qeAfR4p+kZQI93mp4B9Hin6RlAj3ea/wU/zsX1G6MkDAAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Total Defect Quantities' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vendor Benchmarking (Defect Rate by Vendor)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
